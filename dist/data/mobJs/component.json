{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "onlyMob": true
            },
            "content": "Component structure"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The components are divided into two modules: <strong>Definition</strong> and <strong>Function</strong>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "definition",
                "label": "Definition"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "definition.js"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The main properties necessary for the definition of a component.<br/> It is possible to use other specific properties if you decide to use the component as a webComponent, consult the <a href='/#mobJs_web_component'>specific section</a>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "name:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "This must start with a lowercase letter, contain a hyphen, and satisfy certain other rules listed in the web component specification's.<br/>When a specific block of DOM (still in string format) is attached to the DOM the components defined as webComponent will be recognized and transformed into real components."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "All components share a set of properties that allow a specific walker to recognize them and check a single option without having to deal with multiple possibilities (e.g. if we have 50 components, we don't have to search for all 50 but we just need to check the nodes that have the specific property 'I am a member')."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "This mechanism significantly speeds up the search and transformation of components into the page."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "component:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The 'component' function launched when the component is created."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "exportState:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "An array of states visible from the outside, e.g. from the parent component."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "state:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The states of the component. The state is an instance of <a href='/#mobCore_store'>store</a>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "/snippets/mobJs/definition.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "function",
                "label": "Component&nbsp;function"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "myComponent.js"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Basic component structure example."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "/snippets/mobJs/componentBase.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "id": "function-params",
                "label": "Params&nbsp;example"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Note:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Once the function has been executed and the HTML block has been rendered, it is no longer under the control of the library.<br/> Using the parameters <strong>watch, bindProps, etc..</strong> you can modify the DOM based on the state change. The parameters of the function are in fact the only elements that will remain 'alive'."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "/snippets/mobJs/component.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "parameters",
                "label": "All&nbsp;params"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Function params"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "All params of component function"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<a href='/#mobJs_html'>html</a>: Function",
                    "<a href='/#mobJs_onMount'>onMount</a>: Function",
                    "<a href='/#mobJs_getState'>getState</a>: Function",
                    "<a href='/#mobJs_setState'>setState</a>: Functions",
                    "<a href='/#mobJs_emit'>emit</a>: Function",
                    "<a href='/#mobJs_emitAsync'>emitAsync</a>: Function",
                    "<a href='/#mobJs_computed'>computed</a>: Function",
                    "<a href='/#mobJs_watch'>watch</a>: Function",
                    "<a href='/#mobJs_watchSync'>watchSync</a>: Function",
                    "<a href='/#mobJs_remove'>remove</a>: Function",
                    "<a href='/#mobJs_removeDom'>removeDOM</a>: Function",
                    "<a href='/#mobJs_getChildren'>getChildren</a>: Function",
                    "<a href='/#mobJs_freezeProp'>freezeProp</a>: Function",
                    "<a href='/#mobJs_unFreezeProp'>unFreezeProp</a>: Function",
                    "<a href='/#mobJs_getParentId'>getParentId</a>: Function",
                    "<a href='/#mobJs_watchParent'>watchParent</a>: Function",
                    "<a href='/#mobJs_staticProps'>staticProps</a>: Function",
                    "<a href='/#mobJs_bindProps'>bindProps</a>: Function",
                    "<a href='/#mobJs_unBind'>unBind</a>: Function",
                    "<a href='/#mobJs_syncParent'>syncParent</a>: Function",
                    "<a href='/#mobJs_bindEvents'>bindEvents</a>: Function",
                    "<a href='/#mobJs_delegateEvents'>delegateEvents</a>: Function",
                    "<a href='/#mobJs_repeat'>repeat</a>: Function"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        }
    ]
}
