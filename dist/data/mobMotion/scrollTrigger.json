{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1"
            },
            "content": "scrollTrigger"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "bla bla bla"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3",
                "color": "green"
            },
            "content": "Params:"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "/snippets/mobMotion/scrollTriggerType.d.ts",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "target",
                "label": "DOM&nbsp;Element"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "DOM Element"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "item"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The default subject to apply transformations to. If you use the <span>pin</span> property it will be applied to this element."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "trigger"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "A DOM node other than <span>item</span> to be used as a reference for <span>position, height, and width</span> calculations."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "applyTo"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "A DOM node other than <span>item</span> to apply transformations to."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "scroller"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The <span>scrollable node</span> in which the target is contained.<br/> The default is <span>window</span>."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "screen"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "A node that contains the <span>scrollable element</span>.<br/> The default is <span>window</span>."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "breakpoint",
                "label": "breakpoint"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "breakpoint"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "breakpoint"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>Reference breakpoint</span>, it will be possible to add custom values in <a href='/#mobMotion_defaults'>Default utils</a>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "queryType"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "determines whether the scrollTriger should be active from <span>breakpoint up</span> or <span>up to the breakpoint</span>."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "range",
                "label": "range"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "range"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Property that defines the calculation of the distance value.<br/><span>Valid only if you use simple built-in transformations</span>"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "X | Y"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span>+/-100px:</span> move by +-100 pixel",
                    "<span>+/-100vw | +/-100vh:</span> move by +-100 fractions of viewport",
                    "<span>+/-100w | +/-100h:</span> move by +-100 fractions of itself",
                    "The propierties will be <span>re-calculated at each resize</span>"
                ]
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "rotate | rotateY | rotateX | rotateZ"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>45deg</span> |  <span>-45deg</span>, The default value is 0."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "scale"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "example: <span>+/-0.5</span>, The scale property is increased by 0.5, th default value is 0."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "opacity"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>+/-</span> number between 0 and 1."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "customCssPropierites"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "('margin', 'padding-left', etc ...) Each value will be converted to px, no unit misure is needed."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "tween"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>If a tween is used</span> there are no options the value will be controlled by the <span>sequencer/scrollerTween</span> itself."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "/snippets/mobMotion/scrollTriggerRange.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "dynamicRange",
                "label": "dynamicRange"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "dynamicRange"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Alternative to the range property.<br/><span>Valid only if you use simple built-in transformations</span>"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "The transformation value calculated through the <span>use of a function</span>.",
                    "The result of the function <span>will be used in px</span>.",
                    "The function will be <span>re-executed at each resize</span>.",
                    "If used, it will take <span>priority over the range method</span>.",
                    "<span>if the property is a tween it will have no effect.</span>"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "/snippets/mobMotion/scrollTriggerDynamicRange.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "tween",
                "label": "scrollerTween/sequencer"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "use scrollerTween/sequencer"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "For more complex animations with multiple propierties use a <span>custom tween</span>. It is possible to use a <a href='/#mobMotion_sequencer'>sequencer</a>, otherwise there is a simplified tween: <span>scrollerTween</span> which shares some methods :"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": ["subscribe", "subscribeCache", "onStop", "destroy"]
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Instead of the given property scrollerTween only needs two properties <span>from</span> and <span>to</span>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "/snippets/mobMotion/scrollTriggerTween.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "position",
                "label": "start/end"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "start/end"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Bla bla bla"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "/snippets/mobMotion/test.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "ease",
                "label": "ease"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "ease"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Bla bla bla"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "/snippets/mobMotion/test.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "pin",
                "label": "pin"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "pin"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Bla bla bla"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "/snippets/mobMotion/test.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "marker",
                "label": "marker"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "marker"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Bla bla bla"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "/snippets/mobMotion/test.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "events",
                "label": "events"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "events"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Bla bla bla"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "/snippets/mobMotion/test.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "utils",
                "label": "utils"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "utils"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Bla bla bla"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "/snippets/mobMotion/test.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        }
    ]
}
