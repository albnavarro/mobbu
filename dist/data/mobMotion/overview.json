{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "mobMotion"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "dependency:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<a href='/#mobCore_overview'>mobCore</a>, The mobMotion and mobCore folders must be at the same level."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Philosophy:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span>It doesn't aim to write as little code as possible</span>, but rather to provide utilities while leaving more freedom for <span>personal customization</span>.",
                    "<span>As much modularity as possible</span>, no big objects, but smaller modules that interact.",
                    "Each module is provided with <span>comments and type in jsDoc and ts interface</span> to facilitate completion. The entire project remains anyway. written in <span>vanilla javascript</span>."
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3",
                "color": "green"
            },
            "content": "Async vs Sync"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The modules under the <span>async</span> section are based entirely on the concept of <span>promise</span>, while the <span>sync</span> modules are based entirely on the concept of <span>time</span>. The modules are divided as follows to try to make the most of their strong points, and at the same time <span>keep the code more updatable</span>."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "async",
                "label": "Async"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3",
                "color": "green"
            },
            "content": "Async:"
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "<a href='#mobMotion_tween_spring_lerp'>Tween/Spring/Lerp</a>",
                    "<a href='#mobMotion_async_timeline'>Async timeline</a>"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "Pros:"
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "The single tween can be used <span>without other dependencies</span>",
                    "<span>Lerp</span> and <span>Spring</span> can handle <span>interactive animations</span> such as <span>mouse trails</span>.",
                    "In a timeline it is possible to exploit the <span>space between one tween and the next in a very precise manner</span> without approximations on time.",
                    "Timelines very effectively handle looped animations that don't involve too much user interaction,"
                ]
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "Cons:"
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "The data transformations ( x, y, rotate, etc.. ) will all have the same 'duration' for each tween",
                    "Within a timeline it is possible to <span>change direction only when a single tween is completed ( reverseNext )</span>, this is because as mentioned above the whole mechanism is based on the resolution of promises and not on time."
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "sync",
                "label": "Sync"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3",
                "color": "green"
            },
            "content": "Sync:"
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "<a href='#mobMotion_sequencer'>Sequencer</a>",
                    "<a href='#mobMotion_create_stagger'>Create Stagger</a>",
                    "<a href='#mobMotion_sync_timeline'>Sync timeline</a>",
                    "<a href='#mobMotion_scrolltrigger'>ScrollTrigger</a>",
                    "<a href='#mobMotion_parallax'>Parallax</a>"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "Pros:"
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "It is possible to <span>manage the individual properties (x, y, rotate, etc..) independently</span>, the timing of each property is independent of the others.",
                    "Timelines can handle <span>changes of direction</span> and so on <span>without limitations</span>.",
                    "<span>Staggers</span> can be managed either at the <span>individual tween level</span>, or create <span>multiple tweens one for each stagger element</span> ( createStagger ).",
                    "<span>ScrollTrigger</span> and <span>Parallax</span>"
                ]
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "Cons:"
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "<span>They are not standalone</span>, they require a timer ( syncTimeline ) or a scrollTrigger to be used.",
                    "They cannot handle interactive animations like mouse trails"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "stagger",
                "label": "Stagger"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3",
                "color": "green"
            },
            "content": "Stagger:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Common utility for <span>sync</span> and <span>Async</span> animation"
        },
        {
            "component": "mob-list",
            "props": {
                "items": ["<a href='#mobMotion_stagger'>Stagger</a>"]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "plugin",
                "label": "Plugin"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3",
                "color": "green"
            },
            "content": "Plugin:"
        },
        {
            "component": "mob-list",
            "props": {
                "tag": "h3",
                "items": ["<a href='#mobMotion_plugin'>Plugin</a>"]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "defaults",
                "label": "Defaults"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3",
                "color": "green"
            },
            "content": "Defaults:"
        },
        {
            "component": "mob-list",
            "props": {
                "tag": "h3",
                "items": ["<a href='#mobMotion_defaults'>Defaults</a>"]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        }
    ]
}
