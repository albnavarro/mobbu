{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Initialize"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "Store"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true
            },
            "content": "A classic store based on the <strong>pub/sub</strong> pattern.<br />This module also powers the <strong>reactivity system</strong> in <strong>mobJs</strong> JavaScript components."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "big"
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "x-small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "index": "Store / 01",
                            "isSection": true,
                            "useSticky": false
                        },
                        "content": "Initialize"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Feature:"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "tag": "h3",
                            "items": [
                                "Optional Dynamic type check",
                                "Optional Transform function",
                                "Optional Validation function",
                                "Optional Equal check",
                                "Proxi support"
                            ]
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {}
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Basic implementations:"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/basic-use.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 6
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Advanced implementations:"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "For advanced usage, it is necessary to return a <strong>function that returns an object</strong> containing the <strong>value</strong> property and at least one of the following properties: <strong>validate</strong>, <strong>type</strong>, or <strong>skipEqual</strong>. You can <strong>nest up to two levels</strong> (supporting both basic and advanced use cases) for properties, <strong>as demonstrated in the nested object example</strong>."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/advanced-use.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 32
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Nested object"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "To use an object with <strong>infinite insertions</strong>, employ the <strong>any</strong> type. Note that this approach disables property-specific definitions for nested properties.<br/><br/><strong>Works only with advanced implementation</strong>"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/any.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 16
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big"
                        }
                    }
                ]
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "x-small"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small",
                            "id": "params",
                            "label": "State params"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "index": "Store / 02",
                            "isSection": true,
                            "useSticky": false
                        },
                        "content": "State params"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true
                        },
                        "content": "Details of the parameters if defining a single state via an <strong>advanced implementation</strong>. Recall that in this case, the practice is to provide a <strong>function that returns an object</strong> with a <strong>value property</strong> and one of <strong>validate</strong>, <strong>type</strong>, or <strong>skipEqual</strong>."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "value"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Initial value"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "type"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The type can be defined as a <strong>native JavaScript object</strong> or in the form of a <strong>string</strong>.<br/> In the case of <strong>any</strong>, only the string form is supported."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "items": [
                                "<strong>Function</strong> | 'Function'",
                                "<strong>String</strong> | 'String'",
                                "<strong>Number</strong> | 'Number'",
                                "<strong>Boolean</strong> | 'Boolean'",
                                "<strong>Array</strong> | 'Array'",
                                "<strong>Element</strong> | 'Element'",
                                "<strong>HTMLElement</strong> | HTMLElement",
                                "<strong>NodeList</strong> | 'NodeList'",
                                "<strong>Set</strong> | 'Set'",
                                "<strong>Map</strong> | 'Map'",
                                "'Any'"
                            ]
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "transform"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "<strong>Transformation function</strong> that processes values before validation."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "validate"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Validation function that analyzes values. It receives both the <strong>current value</strong> and <strong>previous value</strong> as parameters, returning a boolean result. Each property's validation status appears as watch function parameters and can be retrieved via the <strong>getValidation()</strong> method."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "skipEqual"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "If the value equals the previous one, the property won't update.<br /> This prevents watch execution and makes the property irrelevant to its related computed values. Default: <strong>true</strong>."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "strict"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "When <strong>true</strong>, the validation function acts as a blocker - the property updates <strong>only</strong> if validation succeeds.<br /><strong>Default</strong>: <strong>false</strong>."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    }
                ]
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "x-small"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small",
                            "id": "store-typescript",
                            "label": "Typescript support"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "index": "Store / 02",
                            "isSection": true,
                            "useSticky": false
                        },
                        "content": "Typescript:"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Typescript support:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Every store can implement an interface describing its state structure.<br />This example demonstrates the pattern using <strong>jsDoc</strong>."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "Note: The <strong>type</strong> parameter (for dynamic type checking) operates outside TypeScript's validation system."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/store-type.ts",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 4
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/store-type-add.ts",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 19
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "In <strong>.ts</strong> files, you can pass the interface as a generic parameter."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/store-type-add-typescript.ts",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 14
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    }
                ]
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "x-small"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small",
                            "id": "store-get-proxi",
                            "label": "GetProxi"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "index": "Store / 03",
                            "isSection": true,
                            "useSticky": false
                        },
                        "content": "Methods:"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "GetProxi"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Returns a proxy wrapper for the original object."
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "dots": false,
                            "items": [
                                "<strong>get</strong>: The object automatically reflects the current state values.",
                                "<strong>set</strong>: Internally triggers <strong>myStore.set('prop', value)</strong> when modifying the object."
                            ]
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "Using <strong>proxies</strong> enables the simplest way to both <strong>read</strong> and <strong>modify</strong> state values."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "Deep watch"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The proxy intentionally omits <strong>deep watch</strong> for performance optimization.<br />To modify <strong>nested</strong> object contents, you must <strong>reassign</strong> the entire property."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/get-proxi.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 35
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "store-set",
                            "label": "Set"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Set"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "<strong>Set store value:</strong> Directly updates the state while maintaining reactivity."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "<strong>set</strong> provides an alternative to <strong>proxy</strong>-based state updates.<br />It offers <strong>more configuration options</strong> than the proxy approach."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/set.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 18
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "Set Options: ( optional )"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "tag": "h3",
                            "dots": false,
                            "items": [
                                "<strong>emit: </strong>&nbsp;Modifies data without triggering reactions (no callbacks fired). Default: <strong>true</strong>."
                            ]
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/set-params.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 18
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "With proxi"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Using proxy vs object key access:"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/set-proxi.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 3
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "store-update",
                            "label": "Update"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Update"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Update store value:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "<strong>update</strong> serves as a <strong>proxy</strong> alternative for state modifications,<br />offering <strong>additional configuration options</strong> beyond proxy capabilities."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/update.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 25
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "Update Options: ( optional )"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "tag": "h3",
                            "dots": false,
                            "items": [
                                "<strong>emit: </strong>&nbsp;Performs silent updates (bypasses reactivity, no callbacks triggered). Default: <strong>true</strong>.",
                                "<strong>clone: </strong>&nbsp;Creates a copy of original data. Default: <strong>false</strong>."
                            ]
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/update-params.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 20
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "With proxi"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Using proxy vs object key access:"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/update-proxi.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 18
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "store-get",
                            "label": "Get"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Get"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Returns the entire store - use object destructuring to extract specific properties."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "<strong>get</strong> provides a direct access alternative to <strong>proxy</strong>-based state reading."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/get.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 1
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "store-get-props",
                            "label": "Get-props"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Get props"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Retrieves a specific property from the store."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "<strong>getProp</strong> offers a direct alternative to <strong>proxy</strong>-based state access for reading values."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/get-prop.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 1
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "store-watch",
                            "label": "Watch"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Watch"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Subscribes to state changes and provides an unsubscribe callback for cleanup."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/watch.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 6
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "Watch Options: ( optional )"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "tag": "h3",
                            "dots": false,
                            "items": [
                                "<strong>wait: </strong>&nbsp;Defers callback execution until the current <strong>JavaScript event loop</strong> completes, using the latest value.<br />Only effective when <strong>emit-async</strong> is not used.<br/> Default: <strong>false</strong>.",
                                "<strong>immediate: </strong>&nbsp;Triggers the initial callback immediately on subscription.<br />Default: <strong>false</strong>."
                            ]
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/watch-props.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 10
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "With proxi"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Using proxy vs object key access:"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/watch-proxi.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 12
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "store-emit",
                            "label": "Emit"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Emit"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Triggers all property-specific callback functions."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/emit.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 1
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "With proxi"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Using proxy vs object key access:"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/emit-proxi.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 12
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "store-emit-async",
                            "label": "Emit-async"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Emit async"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Processes all asynchronous property-related callbacks."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/emit-async.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 24
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "With proxi"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Using proxy vs object key access:"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/emit-async-proxi.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 1
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "store-computed",
                            "label": "Computed"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Computed"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "<strong>Computed properties</strong> automatically update when their <strong>dependencies</strong> (store properties) change. These values are recalculated in the <strong>JavaScript event loop</strong>. Key behaviors: <ul> <li>Batch processing: Multiple dependency changes trigger a single recomputation</li> <li><strong>Initial values</strong> are determined during <strong>initialization</strong> using current dependency states</li> </ul>"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "<strong>State Locking:</strong> After function definition, the target state becomes <strong>immutable</strong> to manual changes - only updatable through its <strong>computed function</strong>."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "To configure the <strong>target</strong> of a <strong>computed</strong> property and its optional <strong>dependencies</strong>, you may specify either: <ul> <li>Property keys as <strong>strings</strong></li> <li>A function that returns the <strong>proxy</strong>'s value</li></ul>"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "Explicit dependencies:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Using a functional approach lets you: <ul> <li>Declare <strong>explicit dependencies</strong></li> <li>Pass current dependency values as callback parameters</li> <li>Avoid relying on state values <strong>outside the callback context</strong></li> </ul>"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "When dependencies are explicitly declared: <ul> <li>The <strong>callback</strong> receives <em>only</em> the specified <strong>dependencies</strong></li> <li>Alternative: Access <strong>proxies</strong> directly within the callback</li> </ul>"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/computed.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 19
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "With proxy ( auto detect dependencies )"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "<strong>Proxy</strong> automatically captures and tracks all accessed dependencies - <strong>no explicit declaration needed</strong>."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/computed-auto.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 12
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "With proxi ( explicit dependencies)"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Use <strong>proxy</strong> to automatically define dependencies."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/computed-proxi-dependecies.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 13
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "Cascade computed"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/computed-multi.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 29
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "store-bind",
                            "label": "BindStore"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "BindStore"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "You can <strong>connect multiple stores</strong> to: <ul> <li>Access their properties reactively</li> <li>Sync computations across stores</li> </ul>"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Connected stores will utilize these <strong>methods</strong>:"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "dots": true,
                            "items": [
                                "get",
                                "getProxi ( only as getter )",
                                "watch",
                                "computed",
                                "emit",
                                "emitAsync"
                            ]
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/bind-store.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 24
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "When using <strong>bindStore</strong>, you must extend the type (using <strong>Readonly</strong> TypeScript utils)."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/store-type-bind-store.ts",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 8
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "store-map-set",
                            "label": "Built-in objects Map/Set"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Built-in objects Map/Set"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The <strong>store</strong> implementation relies on <strong>value reassignment</strong> for reactivity. Note: <ul> <li>Special objects (<strong>Map</strong>, <strong>Set</strong>) require full reassignment</li> </ul>"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "with update:"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "<strong>Cloning</strong> ensures proper value comparison by: <ul> <li>Generating distinct <strong>new updated values</strong></li> <li>Enabling accurate <strong>previous</strong>/<strong>current</strong> tracking in <strong>watch</strong> utilities</li> </ul>"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/update-map-set.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 19
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "with set/proxi:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Unlike <strong>update</strong>, this operation: <ul> <li><strong>Cannot clone</strong> values (modifies source data directly)</li> <li>Requires <strong>skipEqual: false</strong> to force updates when values match</li> </ul> <strong>Watch utility behavior:</strong> Previous and current values will report as equal during these direct modifications."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/set-proxi-map-set.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 17
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "I'm evaluating the <strong>possibility</strong> of inserting a new parameter in the state definition called <strong>skipUpdate</strong> to fully exploit the potential of states based on direct <strong>mutation</strong> such as <strong>map</strong> and <strong>set</strong>. For now, you will always have a copy of the previous state or you will update the state remotely by creating a copy anyway. It could be interesting to be able to modify the state remotely without creating a new copy."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "store-destroy",
                            "label": "Destroy"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Destroy"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Destroy store and remove all reference"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/destroy.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 4
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Other functions"
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "debugStore()"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "log store status."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "debugValidate()"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "log validate status."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-core/other.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 2
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big"
                        }
                    }
                ]
            }
        }
    ]
}
