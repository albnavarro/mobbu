{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "Events"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true
            },
            "content": "<strong>Event Collection</strong> (Pub/Sub Model): <ul> <li><strong>Standardized</strong> event system for common interactions</li> <li><strong>Automatic cleanup</strong> when subscribers <strong>reach zero</strong></li> <li>Returns <strong>unsubscribe</strong> function with every subscription ( when needed )</li> </ul>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "useFrame",
                "label": "useFrame"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "useFrame"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Utilizes the first available <strong>requestAnimationFrame</strong> callback."
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "<strong>fps</strong>: current fps value: number",
                    "<strong>time</strong>: current time: number"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/use-frame.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 5
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "useNextTick",
                "label": "useNextTick"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "useNextTick"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Fires after the current <strong>requestAnimationFrame</strong> rendering completes, but before the next frame's callbacks execute."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/use-next-tick.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 22
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "useNextFrame",
                "label": "useNextFrame"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "useNextFrame"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Dispatches during the next available <strong>requestAnimationFrame</strong> cycle, enabling RAF-based animation loops."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/use-next-frame.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 10
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "useFrameIndex",
                "label": "useFrameIndex"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "useFrameIndex"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Precisely schedules execution during a specific <strong>requestAnimationFrame</strong> cycle."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/use-frame-index.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 6
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "useLoad",
                "label": "useLoad"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "useLoad"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Triggers immediately when the DOM finishes loading."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/use-load.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 5
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "useResize",
                "label": "useResize"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "useResize"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Triggers on each window resize with built-in debounce to prevent performance issues."
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "<strong>horizontalResize</strong>: boolean",
                    "<strong>verticalResize</strong>: boolean",
                    "<strong>documentHeight</strong>: number",
                    "<strong>scrollY</strong>: number",
                    "<strong>windowsHeight</strong>: number",
                    "<strong>windowsWidth</strong>: number"
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/use-resize.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 16
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "useVisibilityChange",
                "label": "useVisibilityChange"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "useVisibilityChange"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Listens for browser tab focus changes using the Page Visibility API."
        },
        {
            "component": "mob-list",
            "props": {
                "items": ["<strong>visibilityState</strong>: hidden | visible"]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/use-visibility-change.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 7
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "useMouseEvent",
                "label": "Mouse/Touch event"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "useMouseClick"
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "useMouseClick",
                    "useMouseDown",
                    "useMouseUp",
                    "useTouchMove",
                    "useTouchStart",
                    "useTouchMove",
                    "useTouchEnd"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Handles both <strong>mouse</strong> and <strong>touch</strong> interactions through a unified interface."
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "<strong>page</strong>: { x: number y: number }",
                    "<strong>client</strong>: { x: number y: number }",
                    "<strong>target</strong>: Element",
                    "<strong>type</strong>: mouseEvent",
                    "<strong>preventDefault</strong>: function"
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/use-mouse-click.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 19
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "useMouseWheel",
                "label": "useMouseWheel"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "useMouseWheel"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Handles mouse wheel/pad scroll interactions"
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "<strong>page</strong>: { x: number; y: number; }",
                    "<strong>client</strong>: { x: number; y: number; }",
                    "<strong>target</strong>: Element",
                    "<strong>type</strong>: mouseEvent",
                    "<strong>preventDefault</strong>: function",
                    "<strong>spinX</strong>: number",
                    "<strong>spinY</strong>: number",
                    "<strong>pixelX</strong>: number",
                    "<strong>pixelY</strong>: number"
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/use-mouse-wheel.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 19
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "usePointerEvent",
                "label": "usePointerEvent"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "usePointerEvent"
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "usePointerMove",
                    "usePointerOver",
                    "usePointerDown",
                    "usePointerUp",
                    "usePointerOut",
                    "usePointerLeave"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Handles unified input from mouse, touch, and pen/stylus devices."
        },
        {
            "component": "mob-list",
            "props": {
                "items": ["<strong>native event</strong>"]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/use-pointer-event.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 7
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "useScroll",
                "label": "useScroll"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "useScroll"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Schedules execution on the first available <strong>nextTick</strong> after scrolling completes."
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "<strong>scrollY</strong>: number",
                    "<strong>direction</strong>: scrollDirection"
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/use-scroll.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 7
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "useScrollImmediate",
                "label": "useScrollImmediate"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "useScrollImmediate"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Executes synchronously during each scroll event dispatch."
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "<strong>scrollY</strong>: number",
                    "<strong>direction</strong>: scrollDirection"
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/use-scroll-immediate.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 7
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "useScrollThrottle",
                "label": "useScrollThrottle"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "useScrollThrottle"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Executes at <strong>controlled intervals</strong> during scrolling to optimize performance.  "
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "<strong>scrollY</strong>: number",
                    "<strong>direction</strong>: scrollDirection"
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/use-scroll-throttle.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 7
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "useScrollStart",
                "label": "useScrollStart/End"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "useScrollStart | useScrollEnd"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<ul><li><strong>Scroll Start:</strong> Triggers when scrolling is first detected</li> <li><strong>Scroll End:</strong> Executes after scrolling stops</li> </ul>"
        },
        {
            "component": "mob-list",
            "props": {
                "items": ["<strong>scrollY</strong>: number"]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/use-scroll-start.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 13
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "checkType",
                "label": "checkType"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Checktype"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Checks if variable matches specified type (String/Number/etc.), returning boolean."
        },
        {
            "component": "mob-list",
            "props": {
                "items": [
                    "Function",
                    "String",
                    "Number",
                    "Boolean",
                    "Array",
                    "Element",
                    "HTMLElement",
                    "NodeList",
                    "Set",
                    "Map"
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-core/check-type.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 26
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        }
    ]
}
