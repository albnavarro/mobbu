{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "webComponent"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3",
                "color": "green"
            },
            "content": "Function"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "To use web components it is necessary that in the html function in which the dom is defined, the first node has the same tag used in the <a href='./#mobJs_component'>definition</a> of the component and used to recall it:"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/webComponentFunction.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 13
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3",
                "color": "green"
            },
            "content": "Definition additional params:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "In the <a href='./#mobJs_component'>definition</a> of the component it will be possible to define the functions that interact with the life cycle of the component:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "- <span>attributeToObserve</span>",
                    "- <span>constructorCallback</span>",
                    "- <span>connectedCallback</span>",
                    "- <span>disconnectedCallback</span>",
                    "- <span>adoptedCallback</span>",
                    "- <span>attributeChangedCallback</span>",
                    "- <span>style</span>"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Each function has the <span>context</span> as an argument, and optionally as in the example below an <span>object with all the utilities of our function</span>"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4",
                "color": "green"
            },
            "content": "context:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": ["<span>webComponent context</span>"]
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4",
                "color": "green"
            },
            "content": "data:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span>componentId:</span> string",
                    "<span>emit:</span> function",
                    "<span>emitAsync:</span> function",
                    "<span>freezeProp:</span> function",
                    "<span>getChildren:</span> function",
                    "<span>getParentId:</span> function",
                    "<span>getState:</span> function",
                    "<span>remove:</span> function",
                    "<span>setState:</span> function",
                    "<span>unBind:</span> function",
                    "<span>unFreezeProp:</span> function",
                    "<span>watch:</span> function",
                    "<span>watchSync:</span> function",
                    "<span>watchParent:</span> function"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>attributeChangedCallback</span> will have additional parameters that allow you to communicate with the native webComponent observer such as:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span>name</span>: name of the changed attribute",
                    "<span>oldValue</span>: old value",
                    "<span>newValue</span>: new value"
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/webComponentDefinition.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 29
            }
        }
    ]
}
