{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "onMount"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The onMount function will be executed when all components of the current loop have been created and attached to the DOM.<br/> onMount functions will be executed starting from the deepest level up."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The route will be considered loaded (and consequently the specific <a href='./#mobJs-routing'>events</a> will be launched) when all onMount functions are executed."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Scoped rendering"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "You can execute the onMount function exactly after the component has been attached to the DOM and before child components are created by using the scoped parameter in the <a href='./#mobJs-component'>component definition</a>."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Params"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The onMount function will have as its parameter an object containing the main node of the component and all the refs."
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": ["- element: main node.", "- refs: nested node"]
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Most of the operations in the component will take place in this function having all the nodes of the component available."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Destroy"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The onMount function ( optional ) will return the destroy function which will be executed when the component is dismounted."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/onmount.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 26
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Async"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The onMount function can be asynchronous. If the asynchronous function is used, it will affect the execution times of the onMount functions of all parent components (they will be executed after the current function)."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/onmountAsync.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Tips"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "It is important to know whether it is necessary to make the onMount function 'blocking' or to delegate the asynchronous behavior to an external function, for example:<br/>If upstream of our component we need to know the exact measurements of the same, and the same depend from a calculation carried out in the onMount function (for example a data fetch) we should solve the onMount function when our asynchronous function is solved, otherwise we can solve our onMount function immediately."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/onmountTips.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        }
    ]
}
