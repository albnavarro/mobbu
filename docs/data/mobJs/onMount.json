{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "onMount"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The <span>onMount</span> function will be executed when <span>all components of the current loop</span> have been created and attached to the DOM.<br/> <span>onMount functions will be executed starting from the deepest level up.</span>"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The <span>route will be considered loaded</span> (and consequently the specific <a href='./#mobJs_routing'>events</a> will be launched) when <span>all onMount functions are executed</span>."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4",
                "color": "green"
            },
            "content": "Params"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The <span>onMount</span> function will have as its parameter an object containing the <span>main node</span> of the component and all the <span>refs</span>."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Most of the operations in the component will take place in this function having all the nodes of the component available."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4",
                "color": "green"
            },
            "content": "Scoped"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "You can execute the onMount function exactly after the component has been attached to the DOM and before child components are created by using the <span>scoped</span> parameter in the <a href='./#mobJs_component'>component definition</a>."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Destroy"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The <span>onMount</span> function ( optional ) will return the destroy function which will be executed when the component is dismounted."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/onmount.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 26
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Async"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The onMount function can be <span>asynchronous</span>. If the asynchronous function is used, it will affect the execution times of the onMount functions of all parent components (they will be executed after the current function)."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/onmountAsync.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Tips"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "It is important to know <span>whether it is necessary to make the onMount function 'blocking'</span> or to <span>delegate the asynchronous behavior to an external function, for example</span>:<br/>If upstream of our component we need to know the exact measurements of the same, and the same depend from a calculation carried out in the onMount function (for example a data <span>fetch</span>) we should solve the onMount function when our asynchronous function is solved, otherwise we can solve our onMount function immediately."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/onmountTips.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        }
    ]
}
