{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "Component"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The components are divided into two modules: Definition and Function<br/>For convenience it is recommended to divide the two modules into two separate files:"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "Component basic"
        },
        {
            "component": "anchor-button",
            "props": {
                "anchor": "#component-definition",
                "content": "Component definition"
            }
        },
        {
            "component": "anchor-button",
            "props": {
                "anchor": "#function",
                "content": "Function component"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "Function component params"
        },
        {
            "component": "anchor-button",
            "props": {
                "anchor": "#primary",
                "content": "Fundamental params"
            }
        },
        {
            "component": "anchor-button",
            "props": {
                "anchor": "#static",
                "content": "Static params"
            }
        },
        {
            "component": "anchor-button",
            "props": {
                "anchor": "#secondary",
                "content": "Utils params"
            }
        },
        {
            "component": "anchor-button",
            "props": {
                "anchor": "#list",
                "content": "repeat/invalidate"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "Traversal operation"
        },
        {
            "component": "anchor-button",
            "props": {
                "anchor": "#traversal",
                "content": "Traversal operation"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "big",
                "id": "component-definition",
                "label": "Component definition"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Component definition"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "createComponent is the function that will take care of registering our component."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "tag name:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "A component to be used must be specified as a web-component. Once rendered the DOM generated by the component will take its place"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Tag name must start with a lowercase letter, contain a hyphen, and satisfy certain other rules listed in the web component specification's."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "component:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The component function launched when the component is created."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "child:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "An array with the definitions of the components used within it. It is necessary to load dependencies before initializing the application."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "exportState:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "An array of states visible from the outside, e.g. from the parent component."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "state:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The states of the component. the state of the component is based on the <a href='#mobCore-store'>store</a> defined in mobCore and inherits all its functionality"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "webComponent:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "If the component function returns as first node the tag specified in the definition it will be possible to use the component as a web component and manage its lifecycle."
        },
        {
            "component": "mob-list",
            "props": {
                "tag": "h3",
                "dots": false,
                "items": ["<a href='./#mobJs-web-component'>Web component</a>"]
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "scoped:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Fire onMount callback immediately, normally onMount is fired after all components have been created. This means that if <span class='quote'>scoped:true</span> e.g. every querySelector fired inside onMount function is scoped inside current component, but has no effect to child component. <span class='quote'>default = false</span>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/definition.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 34
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "function",
                "label": "Function component"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "component function"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Basic component structure example."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/componentBase.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 36
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "id": "function-params",
                "label": "Example"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Note:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Once the function has been executed and the HTML block has been rendered, it is no longer under the control of the library.<br/> Using the parameters watch, bindProps, etc.. you can modify the DOM based on the state change. The parameters of the function are in fact the only elements that will remain 'alive'."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Advanced component structure example."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/component.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 83
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "id": "async",
                "label": "Async"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Async"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The component function can be asynchronous. It is therefore possible to perform fetches and similar operations before rendering the DOM"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/componentAsync.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 23
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "parameters",
                "label": "Component function params"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "All params of component function"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Component function params:"
        },
        {
            "component": "mob-spacer",
            "props": {
                "id": "primary",
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Fundamental params:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": false,
                "items": [
                    "<a href='./#mobJs-html'>html</a>",
                    "<a href='./#mobJs-onMount'>onMount/Destroy</a>",
                    "<a href='./#mobJs-getState'>getState</a>",
                    "<a href='./#mobJs-setState'>setState</a>",
                    "<a href='./#mobJs-updateState'>updateState</a>",
                    "<a href='./#mobJs-computed'>computed</a>",
                    "<a href='./#mobJs-watch'>watch</a>",
                    "<a href='./#mobJs-watchSync'>watchSync</a>",
                    "<a href='./#mobJs-staticProps'>staticProps</a>",
                    "<a href='./#mobJs-bindProps'>bindProps</a>",
                    "<a href='./#mobJs-bindEvents'>bindEvents</a>",
                    "<a href='./#mobJs-delegateEvents'>delegateEvents</a>",
                    "<a href='./#mobJs-bindtext'>bindText</a>",
                    "<a href='./#mobJs-bind-class-style'>bindClassStyle</a>",
                    "<a href='./#mobJs-methods'>methods</a>",
                    "<a href='./#mobJs-refs'>Refs</a>"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "id": "static",
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Static params:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": false,
                "items": [
                    "<a href='./#mobJs-instanceName'>InstanceName</a>",
                    "<a href='./#mobJs-class-list'>ClassList</a>",
                    "<a href='./#mobJs-slot'>Slot</a>"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "id": "secondary",
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Utils params:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": false,
                "items": [
                    "<a href='./#mobJs-unBind'>unBind</a>",
                    "<a href='./#mobJs-emit'>emit</a>",
                    "<a href='./#mobJs-emitAsync'>emitAsync</a>",
                    "<a href='./#mobJs-removeDom'>removeDOM</a>",
                    "<a href='./#mobJs-remove'>remove</a>",
                    "<a href='./#mobJs-getChildren'>getChildren</a>",
                    "<a href='./#mobJs-freezeProp'>freezeProp</a>",
                    "<a href='./#mobJs-unFreezeProp'>unFreezeProp</a>",
                    "<a href='./#mobJs-getParentId'>getParentId</a>",
                    "<a href='./#mobJs-watchParent'>watchParent</a>"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "id": "list",
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Render list/component:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": false,
                "items": [
                    "<a href='./#mobJs-runtime'>renderComponent</a>",
                    "<a href='./#mobJs-invalidate'>invalidate</a>",
                    "<a href='./#mobJs-repeat'>repeat ( array.map )</a>",
                    "<a href='./#mobJs-invalidate-vs-repeater'>invalidate vs repeater</a>"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "traversal",
                "label": "Traversal operation"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Traversal operation"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": false,
                "items": [
                    "<a hrcf='./#mobJs-setStateByName'>setStateByName</a>",
                    "<a href='./#mobJs-updateStateByName'>updateStateByName</a>",
                    "<a href='./#mobJs-useMethodByName'>useMethodByName</a>"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        }
    ]
}
