{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "Component"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The components are divided into two modules: Definition and Function<br/>For convenience it is recommended to divide the two modules into two separate files:"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "definition",
                "label": "createComponent"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "createComponent"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "createComponent is the function that will take care of registering our component."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "name:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "This must start with a lowercase letter, contain a hyphen, and satisfy certain other rules listed in the web component specification's."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "When a specific block of DOM (still in string format) is attached to the DOM the components defined as webComponent will be recognized and transformed into real components."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "All components share a set of properties that allow a specific walker to recognize them and check a single option without having to deal with multiple possibilities (e.g. if we have 50 components, we don't have to search for all 50 but we just need to check the nodes that have the specific property 'I am a member')."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "This mechanism significantly speeds up the search and transformation of components into the page."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "component:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The component function launched when the component is created."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "child:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "An array with the definitions of the components used within it. It is necessary to load dependencies before initializing the application."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "exportState:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "An array of states visible from the outside, e.g. from the parent component."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "state:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The states of the component. The state is an instance of store"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "webComponent:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "If you decide to use a webComponent it is possible to use specific parameters that will allow you to control the life cycle of the webComponent."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/definition.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 34
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "function",
                "label": "Component&nbsp;function"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "component function"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Basic component structure example."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/componentBase.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 36
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "id": "function-params",
                "label": "Params&nbsp;example"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Note:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Once the function has been executed and the HTML block has been rendered, it is no longer under the control of the library.<br/> Using the parameters watch, bindProps, etc.. you can modify the DOM based on the state change. The parameters of the function are in fact the only elements that will remain 'alive'."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Advanced component structure example."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/component.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 83
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "id": "async",
                "label": "Async"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Async"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The component function can be asynchronous. It is therefore possible to perform fetches and similar operations before rendering the DOM"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/componentAsync.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 23
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "parameters",
                "label": "All&nbsp;params"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Function params"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "All params of component function"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Main params:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": false,
                "items": [
                    "<a href='./#mobJs-html'>html</a>",
                    "<a href='./#mobJs-onMount'>onMount/Destroy</a>",
                    "<a href='./#mobJs-getState'>getState</a>",
                    "<a href='./#mobJs-setState'>setState</a>",
                    "<a href='./#mobJs-watch'>watch</a>",
                    "<a href='./#mobJs-watchSync'>watchSync</a>",
                    "<a href='./#mobJs-staticProps'>staticProps</a>",
                    "<a href='./#mobJs-bindProps'>bindProps</a>",
                    "<a href='./#mobJs-bindEvents'>bindEvents</a>",
                    "<a href='./#mobJs-delegateEvents'>delegateEvents</a>",
                    "<a href='./#mobJs-repeat'>reactive list (repeat)</a>"
                ]
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Secondary params:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": false,
                "items": [
                    "<a href='./#mobJs-unBind'>unBind</a>",
                    "<a href='./#mobJs-emit'>emit</a>",
                    "<a href='./#mobJs-emitAsync'>emitAsync</a>",
                    "<a href='./#mobJs-computed'>computed</a>",
                    "<a href='./#mobJs-renderComponent'>renderComponent</a>",
                    "<a href='./#mobJs-removeDom'>removeDOM</a>",
                    "<a href='./#mobJs-remove'>remove</a>",
                    "<a href='./#mobJs-getChildren'>getChildren</a>",
                    "<a href='./#mobJs-freezeProp'>freezeProp</a>",
                    "<a href='./#mobJs-unFreezeProp'>unFreezeProp</a>",
                    "<a href='./#mobJs-getParentId'>getParentId</a>",
                    "<a href='./#mobJs-watchParent'>watchParent</a>"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        }
    ]
}
