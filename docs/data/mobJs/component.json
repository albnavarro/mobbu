{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "Component structure"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The components are divided into two modules: <span>Definition</span> and <span>Function</span>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "definition",
                "label": "Definition"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3",
                "color": "green"
            },
            "content": "definition.js"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The <span>main properties necessary for the definition of a component</span>.<br/> It is possible to use <span>other specific properties</span> if you decide to use the component as a  <a href='./#mobJs_web_component'>webComponent</a>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "name:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "This must start with a <span>lowercase letter, contain a hyphen</span>, and satisfy certain other <span>rules listed in the web component specification's</span>."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "When a specific block of <span>DOM</span> (still in string format) is <span>attached to the DOM the components defined as webComponent</span> will be <span>recognized</span> and <span>transformed</span> into real components."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "All components <span>share a set of properties</span> that allow a <span>specific walker to recognize them</span> and check a single option without having to deal with multiple possibilities (e.g. if we have 50 components, we don't have to search for all 50 but we just need to check the nodes that have the specific property 'I am a member')."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "This mechanism significantly <span>speeds up</span> the search and transformation of components into the page."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "component:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The <span>component function</span> launched when the <span>component is created</span>."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "exportState:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "An array of <span>states visible from the outside</span>, e.g. from the parent component."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "state:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>The states of the component</span>. The state is an instance of <a href='./#mobCore_store'>store</a>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "webComponent:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "If you decide to use a <span>webComponent</span> it is possible to use <a href='./#mobJs_web_component'>specific parameters</a> that will allow you to control the life cycle of the <span>webComponent</span>."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/definition.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 33
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "function",
                "label": "Component&nbsp;function"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3",
                "color": "green"
            },
            "content": "myComponent.js"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>Basic component</span> structure example."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/componentBase.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 36
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "id": "function-params",
                "label": "Params&nbsp;example"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Note:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Once the function has been executed and the HTML block <span>has been rendered</span>, it is <span>no longer under the control of the library</span>.<br/> Using the parameters <span>watch, bindProps, etc..</span> you can modify the DOM based on the state change. The parameters of the function are in fact the only elements that will remain 'alive'."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>Advanced component</span> structure example."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/component.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 83
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "id": "async",
                "label": "Async"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3",
                "color": "green"
            },
            "content": "Async"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The component function can be <span>asynchronous</span>. It is therefore possible to perform <span>fetches</span> and similar operations <span>before rendering the DOM</span>"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/componentAsync.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 23
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "parameters",
                "label": "All&nbsp;params"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3",
                "color": "green"
            },
            "content": "Function params"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "All params of component function"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Main params:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<a href='./#mobJs_html'>html</a>: Function",
                    "<a href='./#mobJs_onMount'>onMount/Destroy</a>: Function",
                    "<a href='./#mobJs_getState'>getState</a>: Function",
                    "<a href='./#mobJs_setState'>setState</a>: Functions",
                    "<a href='./#mobJs_watch'>watch</a>: Function",
                    "<a href='./#mobJs_watchSync'>watchSync</a>: Function",
                    "<a href='./#mobJs_staticProps'>staticProps</a>: Function",
                    "<a href='./#mobJs_bindProps'>bindProps</a>: Function",
                    "<a href='./#mobJs_bindEvents'>bindEvents</a>: Function",
                    "<a href='./#mobJs_delegateEvents'>delegateEvents</a>: Function",
                    "<a href='./#mobJs_repeat'>reactive list (repeat)</a>: Function"
                ]
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "Secondary params:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<a href='./#mobJs_unBind'>unBind</a>: Function",
                    "<a href='./#mobJs_emit'>emit</a>: Function",
                    "<a href='./#mobJs_emitAsync'>emitAsync</a>: Function",
                    "<a href='./#mobJs_computed'>computed</a>: Function",
                    "<a href='./#mobJs_remove'>remove</a>: Function",
                    "<a href='./#mobJs_removeDom'>removeDOM</a>: Function",
                    "<a href='./#mobJs_getChildren'>getChildren</a>: Function",
                    "<a href='./#mobJs_freezeProp'>freezeProp</a>: Function",
                    "<a href='./#mobJs_unFreezeProp'>unFreezeProp</a>: Function",
                    "<a href='./#mobJs_getParentId'>getParentId</a>: Function",
                    "<a href='./#mobJs_watchParent'>watchParent</a>: Function",
                    "<a href='./#mobJs_syncParent'>syncParent</a>: Function"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        }
    ]
}
