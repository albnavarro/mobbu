{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "bindText"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "bindText allows you to update the contents of a node when one or more application states change."
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": true,
                "items": [
                    "based on <span class='quote'>String.raw</span>",
                    "requires a <span class='quote'>unique parent node</span>, each update will delete the previous contents of the node.",
                    "States must be specified as <span class='quote'>strings</span> in order to be identified as keys to the component's state object.",
                    "Can be used as content of a <span class='quote'>slotted component</span>."
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/bindText.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 15
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "For more <span class='quote'>complex situations</span> it is always possible to use the <a href='#mobJs-invalidate'>invalidate</a> function to handle complex situations in a cleaner way, invalidate can in fact also return a simple text."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        }
    ]
}
