{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "bindObject"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "bindObject is actually a simplified version of invalidate that allows you to print a value when a specified property is mutated."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Inside String.raw each dynamic value will have to be written as a object with the following parameters:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": true,
                "items": [
                    "<span class='quote'>bind</span>: Observed status",
                    "<span class='quote'>value</span>: A function that will return the updated value."
                ]
            }
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": true,
                "items": [
                    "based on <span class='quote'>String.raw</span>",
                    "requires a <span class='quote'>unique parent node</span>, each update will delete the previous contents of the node.",
                    "similarly to <span class='quote'>bindText</span> it allows you to mix texts and variables.",
                    "Useful if you want to use the value of a <span class='quote'>proxy</span>.",
                    "Useful if you want to print the value of <span class='quote'>current.value</span> inside a repeat"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/bindObject.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 15
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "For more <span class='quote'>complex situations</span> it is always possible to use the <a href='#mobJs-invalidate'>invalidate</a> function to handle complex situations in a cleaner way."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        }
    ]
}
