{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "routing"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "To define a route just create a function that returns the DOM of the route."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The route functions can be asynchronous, this is to allow the fetching of any data.<br/>The function is executed before deleting the old route, only when the data has been recovered and the data is ready will the new route be rendered."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The function has as parameter an object with:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span class='quote'>param</span> Optional parameters added to the URL.",
                    "<span class='quote'>props</span> Optional props passed to the function"
                ]
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "It is necessary to load the dependencies before initializing the application through the utility useComponent()"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "it is not possible to use reactive props in the route as this module is not a component."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "basicfunction",
                "label": "Basic&nbsp;route"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "basic Route:"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/routingFunction.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 18
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "asyncfunction",
                "label": "async&nbsp;route"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "async Route:"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/routingAsyncFunction.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 23
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "Export routes",
                "label": "Export routes"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "Export routes"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "All the routes must be inserted into an array as follows, it is necessary to indicate:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span class='quote'>name</span> route name.",
                    "<span class='quote'>layout</span> function to use",
                    "<span class='quote'>props</span> the props (object) to pass to the layout function "
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/routeInizialization.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 36
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "link navigate",
                "label": "Link&nbsp;navigate"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "Navigate via link"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/routingLink.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 6
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "javascript navigate",
                "label": "Javascript&nbsp;navigate"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "Navigate via javascript"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/routeLinkJs.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 8
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "page-transition",
                "label": "Page&nbsp;transition"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "Page transition"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Two functions are available to animate the change of course:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": true,
                "items": ["beforePageTransition", "pageTransition"]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "beforePageTransition"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Asynchronous function launched as soon as the old node has been cloned and before it is added to the DOM, here it is possible to manipulate the style of the old DOM before it is hung."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/beforePageTransition.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 23
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "pageTransition"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Asynchronous function launched as soon as the new route node has been rendered."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/pageTransition.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 48
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "events",
                "label": "Events"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Events"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "A series of events are available to intercept and react to the change of route, to do this a special store called mainStore is available. Being a store, all the methods listed in the store apply"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "beforeRouteChange",
                "label": "beforeRouteChange"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "beforeRouteChange"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Event launched before the change of route, as parameter we would have the name of the next route and templateName."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/beforeRouteChange.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 7
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "beforeRouteChange",
                "label": "beforeRouteLeave"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "beforeRouteLeave"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Event launched before the change of route, as parameter we would have the name of the previous route and templateName."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/beforeRouteLeave.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 7
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "afterRouteChange",
                "label": "afterRouteChange"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "afterRouteChange"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Event launched after the change of route, as parameter we would have the name of the current route and templateName."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/afterRouteChange.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 7
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "activeRoute",
                "label": "activeRoute"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "activeRoute"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The value of the current route and templateName will be returned."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/activeRoute.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 3
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "params",
                "label": "activeParams"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "activeParams"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The value of the current params will be returned."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/activeParams.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 3
            }
        }
    ]
}
