{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "watch"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Using the watch function you can <span class='quote'>react</span> to the change of state whether it occurs from outside the component (for example from a parent through bindProps) or from the component itself."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The default value will not be detected, the reactivity will start from the first mutation."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The watch function is automatically <span class='quote'>trashed</span> when the component is <span class='quote'>destroyed</span>. You can use the returned unwatch function to <span class='quote'>disconnect</span> the watch before the component is destroyed."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/watch.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 28
            }
        }
    ]
}
