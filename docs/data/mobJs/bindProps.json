{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "bindProps"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The bindProps function allows a component to update its state upon the mutation of one or more states of the parent component."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The values are available from the <span class='quote'>created state</span>, without having to wait for the onMount state."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Params"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "bind"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The bind property is an array in which the states to monitor are listed, bindProps will fire when one or all of the listed states change. If the states change in the same eventLoop there will be only one reaction."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The parameter is optional since within a repeater the monitored state will trigger the reaction by default, if you want to monitor only that state you can omit the bind parameter."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "forceParent ( optional )"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "By default the states defined in the watch parameter are related to the general component. When inserting multiple components into the same return (for example, we are using a <a href='./#mobJs-slot'>slot</a> or a nested component inside a repeater) you can decide to point to the states of the first component that hosts it and not of the general function component."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "props"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The props property is a function that takes as input an object with all state values of the parent component (not just the monitored states).<br/> This function will return an object with the values to assign to the state of the child component."
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": true,
                "items": [
                    "if you use the state as a proxy this property is superfluous."
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/bindProps.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 48
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "With proxi:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Using a proxy you do not need to reference the updated properties in the function bound to the props object."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/bindPropsProxi.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 27
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "forceParent:"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/bindPropsForce.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 27
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Additional props"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "index"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Indicates the current position of the component inside a repeater."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/bindPropsExtra.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 15
            }
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": false,
                "items": [
                    "<a href='./#mobJs-repeat'>reactive list (repeat)</a>"
                ]
            }
        }
    ]
}
