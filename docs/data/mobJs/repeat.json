{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "reactive list: repeat"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The repeat function allows you to keep updated a list of components whose display depends on an array of any type. If you use an array of objects it will be possible to use a key to maintain the order of the elements at each update."
        },
        {
            "component": "mob-list",
            "props": {
                "tag": "h3",
                "dots": false,
                "items": ["<a href='./#dynamic-list'>example</a>"]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "watch:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Reactive state ( must be an array ) to watch"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "clean:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Cleans the entire list by deleting previous components before updating it."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "key:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Optional key, if you are using an array of objects you can use an object key to maintain the order of the results. If multiple elements share the same key, duplicates will be eliminated."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "If no key is specified and <span class='quote'>clean=false</span>, only new items will be added/removed, but persistent items will not be affected. It will only update the <span class='quote'>index</span> value in bindProps/delegateEvent/bindEvent"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "beforeUpdate"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Event triggered before list update. The function has as parameter an object composed as follows:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<strong>element</strong>: Root component HTMLElement ",
                    "<strong>container</strong>: List container HTMLElement.",
                    "<strong>childrenId</strong>: Active Children ids."
                ]
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "afterUpdate"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Event triggered after list update. The function has as parameter an object composed as follows:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<strong>element</strong>: Root component HTMLElement ",
                    "<strong>container</strong>: List container HTMLElement.",
                    "<strong>childrenId</strong>: Active Children ids."
                ]
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "render"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The render function. The function has as parameter an object composed as follows:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<strong>html</strong>: the function that return the HTML, Not necessary, you can also use the global html function as in the example below.",
                    "<strong>sync</strong>: sync props is necessary (obbligatorie) for tracking key and and the current value of the state observed.",
                    "<strong>currentValue</strong>: The current value of the array indicated in the watch parameter, this is not reactive, it is possible to use it with clean=true, when with each update of the observed array the entire list is recreated each time.",
                    "<strong>index</strong>: The current index of the array indicated in the watch parameter, this is not reactive, it is possible to use it with clean=true, when with each update of the observed array the entire list is recreated each time."
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "important"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<strong>clean = false</strong>: The render function must return a HTML in which the first node must be the 'repeat' component",
                    "<strong>clean = true</strong>: the render function can return HTML in which the component can be contained in one or more HTML tags"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Note:"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h4"
            },
            "content": "index"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Indicates the position of the component inside a repeater, used to retrieve the current value, equivalent to the index parameter of an <span class='quote'>array.map((item, index) => item)</span>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobJs/repeat.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 72
            }
        }
    ]
}
