{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "bindStore"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true
            },
            "content": "<ul><li>Creates reactive binding between component state and an instance of <a href='#mobCore-store'>mobStore</a></li> <li>Inherits full reactivity system from linked store</li> <li>Multi-store support: Pass an array of stores</li> </ul>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Connected stores can only be used in reading mode:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": true,
                "items": [
                    "<span class='quote'>getState</span>",
                    "<span class='quote'>getProxi</span> ( only as getter )",
                    "<span class='quote'>watch</span>",
                    "<span class='quote'>computed</span> ( as dependencies )",
                    "<span class='quote'>emit</span>",
                    "<span class='quote'>emitAsync</span>",
                    "<span class='quote'>bindText</span>",
                    "<span class='quote'>binsProxi</span>",
                    "<span class='quote'>bindEffect</span>",
                    "<span class='quote'>invalidate</span>",
                    "<span class='quote'>repeat</span>"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "Multiple stores can be added using an array.<br/>There is a special store ( MobJs.mainStore ) that handles all mobJs events as in the following example:"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Add store in component definition"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "External stores must be linked in the component <a href='#mobJs-component'>definition</a>"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/definition-bind-store.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 14
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Use within the component"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/bind-store.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 22
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Type tips:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "When using the bindStore utility you need to extend the type ( use readOnlyts utils )."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/bind-store-type.ts",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 16
            }
        }
    ]
}
