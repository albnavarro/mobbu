{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Top"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "<span>mobJs</span>/Routing"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "<ul> <li>All dependencies must load before app startup via <a href='#mobJs-utils'>useComponent()</a></li> <li>Route limitations: <ul> <li>No reactive props supported</li> <li>Non-component architecture</li> </ul> </li> </ul>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "isBold": true
            },
            "content": "Route Definition:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<ul><li>Implement as a function returning route DOM</li> <li>Supports async operations (data fetching, etc.)</li> <li>Execution flow: <ul> <li>Runs before removing previous route</li> <li>Waits for all async operations</li></ul> </li> </ul>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "isBold": true
            },
            "content": "The function has as parameter an object with:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "param Optional parameters added to the URL.",
                    "props Optional props passed to the function"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small",
                "id": "basicfunction",
                "label": "Route function"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h2",
                "isSection": true,
                "index": "Routing / 01"
            },
            "content": "Route function"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "big"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/routing-async-function.js",
                "numLines": 24
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "Export routes",
                "label": "Export routes"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Export routes"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "All the routes must be inserted into an array as follows, it is necessary to indicate:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span class='quote'>name</span>: route name.",
                    "<span class='quote'>templateName</span>: name ( identifier ) of the template unlike the name ( route ), this parameter is not unique.",
                    "<span class='quote'>layout</span>: page function to use",
                    "<span class='quote'>restoreScroll</span>: override restoreScroll global value",
                    "<span class='quote'>props</span>: the props (object) to pass to the layout function "
                ]
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "The array containing all the routes will be loaded as described in the <a href='#mobJs-initialization'>initialization section</a> "
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/route-inizialization.js",
                "numLines": 32
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/route-import.js",
                "numLines": 10
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },

        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small",
                "label": "Navigate",
                "isSection": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small",
                "id": "navigate_via_link",
                "label": "Navigate via link"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h2",
                "isSection": true,
                "index": "Navigate / 03"
            },
            "content": "Navigate"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "Navigate via link"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/routing-link.js",
                "numLines": 6
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "javascript_navigate",
                "label": "Navigate via javascript"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "Navigate via javascript"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/route-link-js.js",
                "numLines": 27
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },

        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small",
                "label": "Page transition",
                "isSection": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "page-transition",
                "label": "Functions"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h2",
                "isSection": true,
                "index": "Routing / 02"
            },
            "content": "Page transitions"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "To use page transitions use the following functions:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": true,
                "items": [
                    "<span class='quote'>beforePageTransition</span>()",
                    "<span class='quote'>pageTransition</span>()"
                ]
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "The beforePageTransition and pageTransition functions will be loaded as described in the <a href='#mobJs-initialization'>initialization section</a> "
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "beforePageTransition"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<ul><li>Async function executes between: <ul> <li>Old node cloning</li> <li>DOM insertion</li></ul></li><li>Primary use: Modify cloned node's style pre-attachment</li> </ul>"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/before-page-transition.js",
                "numLines": 25
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "pageTransition"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Executes immediately after new route node completes rendering."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/page-transition.js",
                "numLines": 48
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "big"
            }
        },

        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small",
                "label": "Redirect",
                "isSection": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "Redirect",
                "label": "Redirect"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h2",
                "isSection": true,
                "index": "Routing / 02"
            },
            "content": "Redirect"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Function (optional) where you can return a specific route based on the incoming route"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/redirect.js",
                "numLines": 9
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "big"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small",
                "label": "Events",
                "isSection": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "events",
                "label": "Events/mainStore"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h2",
                "isSection": true,
                "index": "Routing / 02"
            },
            "content": "Events/mainStore"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true
            },
            "content": "Full lifecycle hooks for navigation changes:"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "Centralized Event Management: <ul> <li>Alternative to individual events: MobIs.mainStore</li> <li>Consolidates all mobJs events</li> <li>Integrates with <a href='#mobJs-bindStore'>bindStore</a> utility</li> </ul> Implementation Guide: See dedicated section for usage examples."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "big",
                "id": "beforeRouteChange",
                "label": "beforeRouteChange"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "beforeRouteChange"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Triggers before navigation completes"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/before-route-change.js",
                "numLines": 9
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "big",
                "id": "afterRouteChange",
                "label": "afterRouteChange"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "afterRouteChange"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Triggers after successful navigation"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/after-route-change.js",
                "numLines": 14
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "big",
                "id": "activeRoute",
                "label": "activeRoute"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "activeRoute"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Route Data Access: Returns:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": true,
                "items": [
                    "<span class='quote'>route</span>: Active path value",
                    "<span class='quote'>templateName</span>: Currently rendered template identifier"
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/active-route.js",
                "numLines": 4
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "big",
                "id": "params",
                "label": "activeParams"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "activeParams"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Route Parameters: Returns the current route's parameter values as a key-value object."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/active-params.js",
                "numLines": 4
            }
        }
    ]
}
