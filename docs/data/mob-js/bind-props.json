{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "bindProps"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "anchor-button",
            "props": {
                "anchor": "#proxi",
                "content": "With proxi"
            }
        },
        {
            "component": "anchor-button",
            "props": {
                "anchor": "#explicit",
                "content": "Explicit dependency"
            }
        },
        {
            "component": "anchor-button",
            "props": {
                "anchor": "#additional",
                "content": "Additional props"
            }
        },
        {
            "component": "anchor-button",
            "props": {
                "anchor": "#typescript",
                "content": "Typescript"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true
            },
            "content": "bindProps allows reactive updating of props between parent and child."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "<br/>For passing callbacks, it is convenient to use the <a href='#mobJs-staticProps'>staticProps</a> module.<br/>For a state to be visible from the outside, it must be exposed in the exportState field within the <a href='#mobJs-component'>component's definition</a>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "proxi"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "With proxi ( auto detect dependencies )"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Dependency Management Options: <ul> <li>Automatic dependency tracking</li> <li>No manual declarations needed</li></ul>"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "Using proxies, it is possible to not specify any dependencies directly. If there are no specific needs, this is the most convenient solution. The module will be recomputed when at least one of the properties used inside the callback changes."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/bind-props-proxi.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 27
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "explicit"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Explicit dependency"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "observe"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": " <ul> <li>Triggers bindProps on state changes</li> <li>Batch processes changes within same eventLoop</li> <li>Optional in repeaters (auto-monitors internal state)</li> </ul>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "props"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": " <ul> <li>Input: Full parent state object (all values)</li> <li>Output: Object for child component state</li></ul>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/bind-props.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 66
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "additional"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Additional props"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "value/index"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": " <ul> <li>Provides: <ul> <li>Current value of the repeated item</li> <li>Iteration position (index)</li> </ul> </li> <li>Accessible within <a href='#mobJs-repeat'>repeater</a> module</li> </ul>"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "Even though these values are available, it is always advisable to refer to the proxy provided by the <a href='#mobJs-repeat'>repeater</a> module ( current )."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/bind-props-extra.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 11
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "typescript"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Typescript"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "jsDoc"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/bind-props-jsdoc.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 12
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "ts"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/bind-props-ts.ts",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 11
            }
        }
    ]
}
