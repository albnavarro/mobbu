{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "invalidate vs repeater"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "isBold": true
            },
            "content": "Invalidate:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": true,
                "items": [
                    "Invalidate takes care of deleting the old DOM and returning a fresh new DOM.",
                    "Inside an invalidate there are <span class='quote'>no limits</span> on the formatting of the code, and it is possible to use the standard javascript <span class='quote'>map()</span> function to create lists of elements in case we don't need reactivity.",
                    "Invalidate can also be used to generate DOM blocks depending on specific <span class='quote'>conditions</span>. Returning a function you can use getState() inside it and create more or less complex specific conditions."
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "isBold": true
            },
            "content": "Repeater:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": true,
                "items": [
                    "The repeater module should be thought of as a reactive <span class='quote'>array.map()</span>.",
                    "Repeater keeps track of the components by reusing them or maintaining their order.",
                    "The <span class='quote'>repeat</span> function, unlike <span class='quote'>invalidate</span>, must return a unique node as its first element."
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "isBold": true
            },
            "content": "Difference:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": true,
                "items": [
                    "Both functions must be contained in a unique div",
                    "A repeater with the <span class='quote'>clean=true</span> option is in all respects the mirror image of an <span class='quote'>invalidate</span>.",
                    "One of the goals of this library is to separate all <span class='quote'>static</span> content from <span class='quote'>dynamic</span> content, a correct use of invalidate/repeater will bring more clarity inside the component, just like a correct use of staticProps/bindProps."
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "isBold": true
            },
            "content": "Performance:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": true,
                "items": [
                    "Performance at creation time is very similar, invalidate may be slightly faster and repeat with key slightly slower.",
                    "During the update repeater without key will be the fastest, if there is no need to preserve the internal state of the component it is recommended."
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": false,
                "links": true,
                "items": [
                    {
                        "label": "invalidate",
                        "url": "./#mobJs-invalidate"
                    },
                    {
                        "label": "repeat ( array.map )",
                        "url": "./#mobJs-repeat"
                    }
                ]
            }
        }
    ]
}
