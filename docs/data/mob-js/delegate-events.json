{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "delegateEvents"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true
            },
            "content": "The delegateEvents function collects all events associated with individual elements into a single listener associated with the app root. The event target will then be redirected to the right node. This works and you can use it on simple components or nodes. During the execution of each event, further calls made before the entire app has updated will be inhibited. Due to the <span class='quote'>asynchronous</span> nature of the event, delegateEvents is not suitable for animations, use the native <span class='quote'>addEventListener</span> for this."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "isBold": true
            },
            "content": "delegateEvent supports all common events except:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": true,
                "items": [
                    "mouseenter",
                    "mouseleave",
                    "pointerenter",
                    "pointerleave"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "Params:"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "event"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Native event."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/delegate-events.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 38
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "Additional props"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "value/index"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Indicates the current value and position of the component inside a <a href='#mobJs-repeat'><strong>repeater</strong></a>."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "Although <strong>delegateEvent</strong> can return the <strong>current</strong> and <strong>updated</strong> value inside a <strong>repeater</strong> it is advisable to use the current <strong>proxy</strong> provided by the <strong>repeater</strong> itself, which is more convenient and integrated into the <strong>typescript</strong> environment."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/delegate-events-extra.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 23
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-list",
            "props": {
                "style": "small",
                "dots": false,
                "links": true,
                "items": [
                    {
                        "label": "Reactive List",
                        "url": "#mobJs-repeat"
                    }
                ]
            }
        }
    ]
}
