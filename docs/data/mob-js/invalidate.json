{
    "data": [
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "<span>component</span>/invalidate"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true
            },
            "content": "Triggers re-rendering when associated states change."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h2",
                "index": "Store / 01",
                "isSection": true
            },
            "content": "Params"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "observe:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "An array containing the states to monitor for triggering a re-render. The states can be defined using strings or as functions that return the proxy."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "beforeUpdate ( optional )"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Event triggered before list updates (activates after initial render)."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "afterUpdate ( optional )"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Triggered after render."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "render"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Returns the HTML to be rendered.<br/> <ul> <li>Key Difference from Repeater: <ul> <li>Returns any DOM type without restrictions</li> </ul> </li> <li>Flexibility: <ul> <li>No output constraints</li> <li>Unlimited return value possibilities</li> </ul> </li> </ul>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "<ul> <li>Container Requirement: <ul> <li>Invalidate function must be contained within a unique DOM element</li> </ul> </li> <li>Nesting Rules: <ul> <li>Supports nested invalidate/repeater structures</li> <li>Multiple nestings allowed within same component/scope</li> </ul> </li> </ul>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/invalidate.js",
                "numLines": 59
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "With proxi"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Using proxy instead object key"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/invalidate-proxi.js",
                "numLines": 30
            }
        }
    ]
}
