{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "invalidate"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true
            },
            "content": "<strong>Invalidate Function</strong>: Triggers re-rendering when associated states change."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "observe:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<strong>Invalidation Trigger</strong>: A single state or array of states that force component re-rendering when modified."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "beforeUpdate ( optional )"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<strong>Pre-update Hook</strong>: Event triggered before list updates (activates after initial render)."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "afterUpdate ( optional )"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<strong>Post-update Event</strong>: Triggered after list modifications complete."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "render"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<strong>Render Output</strong>: Returns the HTML to be rendered.<br/> <ul> <li><strong>Key Difference from Repeater</strong>: <ul> <li>Returns <strong>any DOM type</strong> without restrictions</li> </ul> </li> <li><strong>Flexibility</strong>: <ul> <li>No output constraints</li> <li>Unlimited return value possibilities</li> </ul> </li> </ul>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "<ul> <li><strong>Container Requirement</strong>: <ul> <li>Invalidate function must be contained within a <strong>unique DOM element</strong></li> </ul> </li> <li><strong>Nesting Rules</strong>: <ul> <li>Supports nested invalidate/repeater structures</li> <li>Multiple nestings allowed within same component/scope</li> </ul> </li> </ul>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/invalidate.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 72
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "With proxi"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Using proxy instead object key"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-js/invalidate-proxi.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 30
            }
        }
    ]
}
