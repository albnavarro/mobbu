{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "Parallax"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true
            },
            "content": "To be activated, the init method must be executed. Unlike scrollTrigger which performs precise calculations, parallax allows you to move elements around a neutral point (value === 0) reasoning by speed/multipliers rather than absolute numbers. The only property that is calculated absolutely is the opacity, where there are two special parameters opacityStart and opacityEnd."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/parallax-init.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 13
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "big"
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "isSection": true,
                            "index": "Parallax / 01",
                            "useSticky": true
                        },
                        "content": "Params:"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/parallax-type.d.ts",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 60
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "target",
                            "label": "DOM&nbsp;Element"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "DOM Element"
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "item"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The default subject to apply transformations to. If you use the pin property it will be applied to this element."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "trigger"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "A DOM node other than item to be used as a reference for position, height, and width calculations."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "applyTo"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "A DOM node other than item to apply transformations to."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "scroller"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The scrollable node in which the target is contained.<br/> The default is window."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "screen"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "A node that contains the scrollable element.<br/> The default is window."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "breakpoint",
                            "label": "breakpoint"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "breakpoint"
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "breakpoint"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Reference breakpoint, it will be possible to add custom values in <a href='./#mobMotion-defaults'>Default utils</a>"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "queryType"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "determines whether the scrollTriger should be active from breakpoint up or up to the breakpoint."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "propierties",
                            "label": "propierties"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "propierties"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "<strong>Built-in</strong> properties can be used exclusively as <strong>single properties</strong>, to modify multiple properties or for more complex situations in general use one of <strong>scrollerTween</strong>"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "y",
                                "x",
                                "rotate",
                                "rotateY",
                                "rotateX",
                                "rotateZ",
                                "opacity",
                                "scale",
                                "scaleX",
                                "scaleY",
                                "tween: use external scrollerTween for complex animation"
                            ]
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/parallax-propierties.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 39
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "range",
                            "label": "range"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "range ( built-in properties )"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Boolean|string value"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Value indicating the movement ratio.<br/>The closer the value is to 10 the faster the element will move.<br/>To manage the opacity use the two specific properties opacityStart and opacityEnd."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "This property is valid only for built-in properties."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/parallax-range.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 23
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "opacity",
                            "label": "opacity&nbspspecial&nbspprops."
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "opacity special props."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "To manage the opacity use the two specific properties:"
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "opacityStart"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Defines the start value of the opacity animation from the tp of the viewport.<br/> 100 corresponds to 100vh.</br> The default value is 100."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "opacityEnd"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Defines the end value of the opacity animation from the top of the viewport.<br/> 100 corresponds to 100vh.<br/> The default value is 0"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/parallax-opacity.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 16
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "scrollerTween",
                            "label": "scrollerTween"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "use scrollerTween"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "To manage multiple parameters at the same time it is possible to use the appropriate scrollerTween module."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "To use the opacity property use the built-in parameters ( opacityStart | opacityEnd ) or scrollTrigger. The opacity property by its nature works with precise values from 1 to 0, it does not adapt to a multiplier logic."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "scrollerTween shares some methods with other tweens such as:"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "subscribe",
                                "subscribeCache",
                                "onStop",
                                "destroy"
                            ]
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "scrolllerTween range:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "These values will be used in place of the range property"
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "from"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "This value will be the exact value applied to the element in its neutral position, the neutral position depends directly on the align property"
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "to"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "This value is to be understood as a multiplier. using the different properties they will be able to have different multipliers."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The 'to' properties can be lower or higher than the value defined in the 'from' property.<br/> If the 'from' and 'to' values 'coincide' there will be no movement.<br/>The greater the difference between the two values, the greater the movement."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/parallax-tween.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 28
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "align",
                            "label": "align"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "align"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Defines when the current value reaches 0 ( neutral position ). It is possible to use a preset value or a number from 0 to 100 which corresponds to a value calculated from the bottom of the viewport. The default value is center."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "start:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The scroller ( default is the document ) is located at scrolltop === 0;"
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "top:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The element matches the top edge of the screen ( default is the the window )."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "right:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The element matches the right edge of the screen ( default is the the window )."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "center:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The element matches the center of the screen ( default is the the window )."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "bottom:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The element matches the bottom edge of the screen ( default is the the window )."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "left:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The element matches the left edge of the screen ( default is the the window )."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "end:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The element matches the end of the scroller ( default is the the document ).."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "Number:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "number from 0 to 100 which corresponds to a value calculated from the bottom of the viewport"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/parallax-align.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 25
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "onSwitch",
                            "label": "onSwitch"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "onSwitch"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Defines the behavior of the parallax once it reaches point 0 ( neutral position ). It can continue, stop or go back. If it is not set the value from positive will become negative."
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "in-stop",
                                "in-back",
                                "out-stop",
                                "out-back"
                            ]
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/parallax-on-switch.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 26
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "ease",
                            "label": "ease"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "ease"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "If you decide to use the easing parameter, an instance of <a href='./#mobMotion-tween-spring-lerp'>Lerp or Spring</a> will be used to update the values."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "ease"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Boolean value indicating whether to use easing."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "easeType"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The type of easing used: spring | lerp."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "lerpConfig"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The velocity value of the lerp function. It must be a value between 0.01 and 0.1. The default value is 0.06"
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "springConfig"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The Spring configuration. can be a preset between default | gentle | wobbly | bounce | scroller"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/parallax-easing.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 34
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "utils",
                            "label": "utils&nbsp;parameters"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "utils parameters"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "disableForce3D"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Boolean value.<br/>Disable the transform: translate3d(0,0,0) rule applied by the built-in property during animation to activate the GPU."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "useThrottle"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Boolean value.<br/>Apply a throttle to the scroll. The throttle value can be changed in <a href='./#mobMotion-defaults'>Default utils</a>."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "perspective"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Boolean value.<br/>Apply the css rule perspective: {value}px; transform-style: preserve-3d; to the parent HTMLElement."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "useWillChange"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Boolean value.<br/>When there is a large drop in fps, the will-change property is activated for a limited period of time. It is intended as a last resort to deal with a temporary problem. The default value is true."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/parallax-utils.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 25
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big"
                        }
                    }
                ]
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-spacer",
                        "props": {
                            "id": "init",
                            "label": "init"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "isSection": true,
                            "index": "Parallax / 02",
                            "useSticky": true
                        },
                        "content": "Methods"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "init"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Initialize instance"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/parallax-init.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 13
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "refresh",
                            "label": "refresh"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "refresh"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Recalculate all position/measurement values and update rendering. This operation is carried out automatically after each resize."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/parallax-refresh.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 1
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "destroy",
                            "label": "destroy"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "destroy"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Destroy instance"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/parallax-destroy.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 2
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    }
                ]
            }
        }
    ]
}
