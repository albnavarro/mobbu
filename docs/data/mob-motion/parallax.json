{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "<span>Sync</span> /Parallax"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true
            },
            "content": "To activate, the init method must be executed. Unlike scrollTrigger which uses precise calculations, parallax moves elements around a neutral point (value = 0) using speed/multipliers rather than absolute values. The only absolute property is opacity, controlled by opacityStart and opacityEnd parameters."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "Example:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": false,
                "links": true,
                "items": [
                    {
                        "label": "View implementation example",
                        "url": "./#horizontalScroller"
                    }
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/parallax-init.js",
                "numLines": 13
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small",
                "label": "Params",
                "isSection": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "schema",
                "label": "Schema"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h2",
                "isSection": true,
                "index": "Parallax / 01"
            },
            "content": "Params:"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/parallax-type.d.ts",
                "numLines": 59
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "target",
                "label": "DOM&nbsp;Element"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "DOM Element"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "item"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The default element to apply transformations to."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "trigger"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Alternative DOM node for position, <span class='quote'>height</span>, and <span class='quote'>width</span> calculations."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "applyTo"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Alternative DOM node to receive transformations."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "scroller"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Scrollable container node ( default: <span class='quote'>window</span> )."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "screen"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Node containing the scrollable element ( default: <span class='quote'>window</span> )."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "breakpoint",
                "label": "breakpoint"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "breakpoint"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "breakpoint"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Reference breakpoint for responsive behavior. Custom values can be added in <a href='./#mobMotion-defaults'>Default utils</a>."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "queryType"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Determines if parallax activates from breakpoint up or up to breakpoint."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "propierties",
                "label": "propierties"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "propierties"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "Built-in properties work as single properties. For complex animations, use scrollerTween."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span class='quote'>y:</span> Vertical movement",
                    "<span class='quote'>x:</span> Horizontal movement",
                    "<span class='quote'>rotate</span>: Rotation",
                    "<span class='quote'>rotateY</span>: Y-axis rotation",
                    "<span class='quote'>rotateX</span>: X-axis rotation",
                    "<span class='quote'>rotateZ</span>: Z-axis rotation",
                    "<span class='quote'>opacity</span>: Transparency (uses absolute values)",
                    "<span class='quote'>scale</span>: Uniform scaling",
                    "<span class='quote'>scaleX</span>: X-axis scaling",
                    "<span class='quote'>scaleY</span>: Y-axis scaling",
                    "<span class='quote'>tween</span>: Use scrollerTween for complex animations"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/parallax-propierties.js",
                "numLines": 39
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "range",
                "label": "range"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "range ( built-in properties )"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Boolean|string value controlling movement speed ratio."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Higher values (closer to 10) create faster movement.<br/>For opacity control, use <span class='quote'>opacityStart</span> and <span class='quote'>opacityEnd</span> instead."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Only applies to built-in properties."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/parallax-range.js",
                "numLines": 23
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "opacity",
                "label": "opacity&nbspspecial&nbspprops."
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "opacity special props."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Control opacity with these absolute-value properties:"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "opacityStart"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Starting opacity value from viewport top.<br/>100 = <span class='quote'>100vh</span> (default: 100)."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "opacityEnd"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Ending opacity value from viewport top.<br/>100 = <span class='quote'>100vh</span> (default: 0)."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/parallax-opacity.js",
                "numLines": 16
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "scrollerTween",
                "label": "scrollerTween"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "use scrollerTween"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "For multi-property animations, use the scrollerTween module."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "Note: For opacity, use built-in parameters (opacityStart/opacityEnd) or scrollTrigger - opacity requires absolute values (1-0) rather than multipliers."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "scrollerTween shares these methods with other tweens:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span class='quote'>subscribe</span>",
                    "<span class='quote'>subscribeCache</span>",
                    "<span class='quote'>onStop</span>",
                    "<span class='quote'>destroy</span>"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "scrolllerTween range:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Replaces the range property:"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "from"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Exact value at neutral position (determined by align property)."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "to"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Multiplier value. Different properties can have different multipliers.<br/>Greater difference between from and to values creates more movement.<br/>Identical values produce no movement."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/parallax-tween.js",
                "numLines": 28
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "align",
                "label": "align"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "align"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Defines when value reaches 0 (neutral position).<br/> Use presets or values 0-100 (percentage from viewport bottom).<br/> Default: center."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "start:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "When scroller is at scrollTop = 0"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "top:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The element matches the top edge of the <span class='quote'>screen</span>.<br/> default: <span class='quote'>window</span>."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "right:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The element matches the right edge of the <span class='quote'>screen</span><br/> default: <span class='quote'>window</span>."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "center:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The element matches the center of the <span class='quote'>screen</span><br/> default: <span class='quote'>window</span>."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "bottom:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The element matches the bottom edge of the <span class='quote'>screen</span><br/> default: <span class='quote'>window</span>."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "left:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The element matches the left edge of the <span class='quote'>screen</span><br/> default: <span class='quote'>window</span>."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "end:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The element matches the end of the <span class='quote'>scroller</span><br/> default: <span class='quote'>window</span>."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "Number:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "number from 0 to 100 which corresponds to a value calculated from the bottom of the <span class='quote'>screen</span>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/parallax-align.js",
                "numLines": 25
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "onSwitch",
                "label": "onSwitch"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "onSwitch"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Controls behavior when reaching neutral position (0). If unset, positive values become negative."
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span class='quote'>in-stop</span>",
                    "<span class='quote'>in-back</span>",
                    "<span class='quote'>out-stop</span>",
                    "<span class='quote'>out-back</span>"
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/parallax-on-switch.js",
                "numLines": 26
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "reverse",
                "label": "reverse"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "reverse"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Reverses animation direction"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "ease",
                "label": "ease"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "ease management"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true
            },
            "content": "When enabled, uses Lerp or Spring instances for value updates."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "ease"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Boolean: Toggles easing<br/>default: <span class='quote'>false</span>"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "easeType"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Easing type: spring or lerp"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "lerpConfig"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Lerp velocity ( <span class='quote'>0.01-0.1</span> ). Default: <span class='quote'>0.06</span>"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "springConfig"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Spring configuration presets: <span class='quote'>default</span> - <span class='quote'>gentle</span> - <span class='quote'>wobbly</span> - <span class='quote'>bounce</span> - <span class='quote'>scroller</span>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/parallax-easing.js",
                "numLines": 34
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "utils",
                "label": "utils&nbsp;parameters"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "utils parameters"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "disableForce3D"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Disables GPU-accelerated transform: <span class='quote'>translate3d(0,0,0)</span> during animations"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "useThrottle"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Throttles scroll events (configurable in <a href='./#mobMotion-defaults'>Default utils</a>)"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "perspective"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Applies perspective and transform-style: preserve-3d to parent elements"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "useWillChange"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Temporarily activates <span class='quote'>will-change</span> during FPS drops.<br/>default: <span class='quote'>false</span>"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/parallax-utils.js",
                "numLines": 25
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small",
                "label": "Methods",
                "isSection": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "init",
                "label": "init"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h2",
                "isSection": true,
                "index": "Parallax / 02"
            },
            "content": "Methods"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "init"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Initializes the Parallax instance"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/parallax-init.js",
                "numLines": 13
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "refresh",
                "label": "refresh"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "refresh"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Recalculates positions/measurements and updates rendering (auto-triggered on resize)"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/parallax-refresh.js",
                "numLines": 1
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "destroy",
                "label": "destroy"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "destroy"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Destroys the Parallax instance"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/parallax-destroy.js",
                "numLines": 2
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        }
    ]
}
