{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "Sync timeline"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true
            },
            "content": "syncTimeline is a powerful timing controller that manages one or more <a href='./#mobMotion-sequencer'>sequencers</a>. It handles playback control (play, stop, pause) while regulating animation duration and sequencing."
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": false,
                "links": true,
                "items": [
                    {
                        "label": "View implementation example",
                        "url": "./#caterpillarN2"
                    }
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small",
                "label": "Initialization",
                "isSection": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "code_example",
                "label": "Params"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h2",
                "isSection": true,
                "index": "SyncTimeline / 01"
            },
            "content": "Params:"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sync-timeline-schema.d.ts",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 5
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sync-timeline.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 7
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "repeat:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Sets the number of animation loops (-1 for infinite). The system automatically adjusts the last frame timing by 1/2 of the current fps to eliminate visible repetition between loops. <a href='./#caterpillarN2'>See example</a> for seamless loop transitions."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "yoyo:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "When enabled, automatically reverses animation direction after each loop completion."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "duration:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Total animation duration in milliseconds."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "code example"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sync-timeline-example.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 44
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "big"
            }
        },

        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small",
                "label": "Methods",
                "isSection": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "add",
                "label": "add"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h2",
                "isSection": true,
                "index": "SyncTimeline / 02"
            },
            "content": "Methods"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "add"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Registers one or more sequencers or masterSequencers to the timeline."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sync-time-add.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 13
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "play",
                "label": "play/playReverse/stop"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "play/playReverse"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Control playback direction with these Promise-based methods:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span class='quote'>useCurrent</span>: false - Always starts from beginning/end",
                    "<span class='quote'>useCurrent</span>: true - Reverses only if moving opposite to command",
                    "<span class='quote'>Default</span>: false"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "stop"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Halts playback. By default clears stagger caches (configurable). When disabled, staggers complete naturally by aligning with the first element."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sync-timeline-play.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 14
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "playFrom",
                "label": "playFrom/playFromReverse"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "playFrom/playFromReverse"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Starts playback from specific labels (defined in sequencers). Both methods return Promises that resolve upon timeline completion."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sync-timeline-play-from.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 9
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "reverse",
                "label": "reverse"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "reverse"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Immediately reverses playback direction."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sync-timeline-reverse.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 11
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "pause/resume",
                "label": "pause/resume"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "pause/resume"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Temporarily halts or continues timeline execution."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sync-timeline-pause.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 7
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "onLoopEnd",
                "label": "onLoopEnd"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "onLoopEnd"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Triggers after each loop cycle."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "Parameters:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span class='quote'>loop</span>: Current iteration count",
                    "<span class='quote'>direction</span>: Playback direction (<span class='quote'>forward</span> <span class='quote'>backward</span>)"
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sync-timeline-loop.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 3
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "onComplete",
                "label": "onComplete"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "onComplete"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Triggers when timeline finishes all iterations."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sync-timeline-complete.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 3
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "onUpdate",
                "label": "onUpdate"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "onUpdate"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Triggers every animation frame."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "Parameters:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span class='quote'>time</span>: Current timeline position",
                    "<span class='quote'>direction</span>: Current playback direction"
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sync-timeline-update.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 3
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "destroy",
                "label": "destroy"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "destroy"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Terminates timeline and all child sequencers. <em>Remember to clear external references.</em>"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sync-timeline-destroy.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 3
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "utils",
                "label": "Utils"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Utils"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Status checkers: <span class='quote'>isActive()</span> - <span class='quote'>isSuspended()</span> - <span class='quote'>getDirection()</span> - <span class='quote'>getTime()</span>"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sync-timeline-utils.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 4
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        }
    ]
}
