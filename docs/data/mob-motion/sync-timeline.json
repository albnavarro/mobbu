{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "Sync timeline"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true
            },
            "content": "syncTimeline is a large timer that can handle one or more <a href='./#mobMotion-sequencer'>sequencer</a>. It regulates its duration and manages all the play, stop, pause and more options."
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": false,
                "links": true,
                "items": [
                    {
                        "label": "example:",
                        "url": "./#caterpillarN2"
                    }
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "big"
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "isSection": true,
                            "index": "SyncTimeline / 01",
                            "useSticky": true
                        },
                        "content": "Params:"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/sync-timeline-schema.d.ts",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 5
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/sync-timeline.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 7
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "repeat:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Determines the number of loops to run. Number -1 means that the timeline will run in an infinite loop. During the loop a time equal to 1/2 of the current fps will be subtracted from the last frame. This allows you to eliminate the repetition of the same frame between the end and the beginning. <a href='./#caterpillarN2'>here</a> you can see how the start and end time of the loop is not perceptible."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "yoyo:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Reverse the direction each time the timeline ends."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "duration:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The duration of the animation in milliseconds"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "code example"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/sync-timeline-example.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 44
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big"
                        }
                    }
                ]
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small",
                            "id": "add",
                            "label": "add"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "isSection": true,
                            "index": "SyncTimeline / 02",
                            "useSticky": true
                        },
                        "content": "Methods"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "add"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The add method allows you to add one or more sequencers/masterSequencers to the timeline."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/sync-time-add.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 13
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "play",
                            "label": "play/playReverse/stop"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "play/playReverse"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "<strong>play</strong>, <strong>play reverse </strong> and <strong>stop</strong> of the timeline. The play() and playReverse() methods will return a promise when the timeline is completed. The play/playReverse methods have as their parameter the possibility to apply the action based on the current direction of the timeline.<br/>"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "<span class='quote'>useCurrent</span>: <span class='quote'>false</span> The timeline will always start from the start/end regardless of the current position.<br/>",
                                "<span class='quote'>useCurrent</span>: <span class='quote'>true</span> The timeline will reverse its direction (it will perform a reverse action) only if it is going in the opposite direction, otherwise it will continue on its path.",
                                "The default value of useCurrent is false."
                            ]
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "stop"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The stop() method has as its parameter the possibility of clearing the stagger cache if subscribeCache has been used (by default it is true).<br/> If disabled at the stop event the staggers will finish their path by aligning with the first element."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/sync-timeline-play.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 14
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "playFrom",
                            "label": "playFrom/playFromReverse"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "playFrom/playReverse"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "play or play reverse from a specific label, both methods will return a promise which will be resolved when the timeline is completed. The label is defined within the individual sequencer."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/sync-timeline-play-from.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 9
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "reverse",
                            "label": "reverse"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "reverse"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Reverses immediately the direction of travel"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/sync-timeline-reverse.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 11
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "pause/resume",
                            "label": "pause/resume"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "pause/resume"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Pause/Resume the timeline."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/sync-timeline-pause.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 7
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "onLoopEnd",
                            "label": "onLoopEnd"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "onLoopEnd"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Event launched every end of cycle."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "params:"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "<span class='quote'>loop</span>: current loop counter",
                                "<span class='quote'>direction</span>: current direction 'forward | backward'"
                            ]
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/sync-timeline-loop.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 3
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "onComplete",
                            "label": "onComplete"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "onComplete"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Event launched at the end of the timeline."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/sync-timeline-complete.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 3
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "onUpdate",
                            "label": "onUpdate"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "onUpdate"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Event launched at every frame of the timeline."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "params:"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "<span class='quote'>time</span>: current time",
                                "<span class='quote'>direction</span>: current direction 'forward | backward'"
                            ]
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/sync-timeline-update.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 3
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "destroy",
                            "label": "destroy"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "destroy"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The destroy function will also destroy all the sequencers that have been used, and it is advisable to also cancel the references to the individual sequencer."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/sync-timeline-destroy.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 3
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "utils",
                            "label": "Utils"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "Utils"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "<strong>isActive/isSuspended/getDirection/getTime</strong>. Utilities to check the status of the timeline:"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/sync-timeline-utils.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 4
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    }
                ]
            }
        }
    ]
}
