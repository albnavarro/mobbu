{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "<span>Sync</span> /Sequencer"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "The Sequencer is a specialized tween that operates independently of time or precision values. It functions as a data store that returns interpolated values when given an input. Its core method draw(value) handles the interpolation, making it ideal for integration with <a href='./#mobMotion-sync-timeline'>syncTimeline</a> and <a href='./#mobMotion-scrolltrigger'>scrollTrigger</a> which can control it by passing partial values.<br/><br/>Related group: <span class='quote'><a href='#mobMotion-sequencer'>sequencer</a></span> | <span class='quote'><a href='#mobMotion-sync-timeline'>syncTimeline</a></span> | <span class='quote'><a href='#mobMotion-create-stagger'>createStagger</a></span> | <span class='quote'><a href='#mobMotion-scrolltrigger'>scrollTrigger</a></span> | <span class='quote'><a href='#mobMotion-parallax'>parallax</a></span>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "Example:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": false,
                "links": true,
                "items": [
                    {
                        "label": "Example implementation:",
                        "url": "./#caterpillarN2"
                    }
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "How it works"
        },
        {
            "component": "doc-svg",
            "props": {
                "className": "start-end-svg",
                "url": "./asset/svg/sequencer.svg"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small",
                "label": "Params",
                "isSection": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "schema",
                "label": "Schema"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h2",
                "isSection": true,
                "index": "Sequencer / 01"
            },
            "content": "Params:"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sequencer-type.d.ts",
                "numLines": 54
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "all",
                "label": "All params"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "duration"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The duration property defines a numerical range (default: 10) within which properties can vary independently. Think of it like a musical sequencer where you can adjust individual instrument timing within a 2.30 minute track. When used with <a href='./#mobMotion-sync-timeline'>syncTimeline</a> or <a href='./#mobMotion-scrolltrigger'>scrollTrigger</a>, the actual duration scales proportionally to this value."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "data:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "An object containing the animation values to interpolate."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "ease:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The easing function that defines the animation's acceleration curve."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "stagger:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "For stagger effects, refer to the <a href='./#mobMotion-stagger'>stagger</a> section."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "initialization",
                "label": "Initialization"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "Initialization"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Initialization mirrors standard <a href='./#mobMotion-tween-spring-lerp'>tween</a> setup (excluding the relative option):"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sequencer.js",
                "numLines": 43
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },

        {
            "component": "mob-spacer",
            "props": {
                "style": "-small",
                "label": "Methods",
                "isSection": true
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "goto",
                "label": "Goto"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h2",
                "isSection": true,
                "index": "Sequencer / 02"
            },
            "content": "Methods"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "goTo"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Transitions from current state to the target state."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<strong>The first parameter</strong> allows you to modify one or more parameters of the state. Accepts numeric values or dynamic functions for runtime adjustments."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<strong>The second parameter</strong> defines:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "Start/end range within the duration value",
                    "Custom easing for the transition"
                ]
            }
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span class='quote'>Start</span>: default: 0",
                    "<span class='quote'>End</span>: default: duration parameter value"
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sequencer-go-to.js",
                "numLines": 9
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "goFrom",
                "label": "goFrom"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "goFrom"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Similar to <span class='quote'>goTo()</span>, but transitions from the specified start value to the current state."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sequencer-go-from.js",
                "numLines": 7
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "goFromTo",
                "label": "goFromTo"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "goFromTo"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Transitions between two specified states (start → end)."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sequencer-go-from-to.js",
                "numLines": 7
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "add",
                "label": "add"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "add"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Executes custom functions at specific points in the duration range. Since sequencers don't use promises, callbacks trigger at the first opportunity after passing the threshold value."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "Callback Parameters:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span class='quote'>value</span>: Actual trigger point (may slightly exceed target)",
                    "<span class='quote'>isForced</span>: True if sequencer started beyond threshold",
                    "<span class='quote'>direction</span>: Movement context (<span class='quote'>backward</span> <span class='quote'>forward</span> <span class='quote'>none</span>)"
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sequencer-add.js",
                "numLines": 11
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "label",
                "label": "label"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "label"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Create reference points for navigation with <a href='./#mobMotion-sync-timeline'>syncTimeline</a>."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sequencer-label.js",
                "numLines": 34
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "subscribe",
                "label": "subscribe"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "subscribe"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Applies real-time values to targets. Returns an <span class='quote'>unsubscribe()</span> function."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "Memory Tip: Use weakRef for animations in nested functions/closures to prevent leaks."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "This method is not very suitable for staggers. If you're using staggers, the subscribeCache method is preferable.<br/> The stagger mechanism works by delegating callbacks to specific frames. This method is unable to clean up future renderings if the animation is stopped, which is something subscribeCache can do instead."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sequencer-subscribe.js",
                "numLines": 21
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "subscribeCache",
                "label": "subscribeCache"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "subscribeCache"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Optimized version of subscribe for staggers"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "Stores targets/callbacks once",
                    "It only accumulates an object with the actual updated values."
                ]
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "Memory Tip: Use weakRef for animations in nested functions/closures to prevent leaks."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/sequencer-subscribe-cache.js",
                "numLines": 8
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "onstop",
                "label": "onStop"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "onStop"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Triggered when animation/scrollTrigger stops. Useful for resource cleanup (e.g., GPU optimization)."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "This method may not be the most suitable when working with staggers. On the other hand, using subscribeCache (a dedicated method for staggers) allows you to cancel future renderings if they should not be executed. This method, however, cannot be removed from the rendering queue."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/on-stop.js",
                "numLines": 12
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "masterSequencer",
                "label": "masterSequencer"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "masterSequencer"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Groups multiple sequencers for unified control via <a href='./#mobMotion-sync-timeline'>syncTimeline</a>/<a href='./#mobMotion-scrolltrigger'>scrollTrigger</a>. Particularly useful with <a href='./#mobMotion-create-stagger'>createStagger</a>."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/master-sequencer.js",
                "numLines": 21
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "createStagger",
                "label": "createStagger"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "createStagger"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Enables staggered synchronization across multiple sequencer instances using <a href='./#mobMotion-create-stagger'>createStagger</a> parameters."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        }
    ]
}
