{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "scrollTrigger"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true
            },
            "content": "To be activated, the init method must be executed. Unlike parallax which reasons by speed/multipliers, scrollTrigger allows you to reason in absolute values from point A ( start ) to point B ( end )."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mob-motion/scroll-trigger-init.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 13
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "big"
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "isSection": true,
                            "index": "ScrollTrigger / 01",
                            "useSticky": true
                        },
                        "content": "Params:"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-type.d.ts",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 69
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "target",
                            "label": "DOM&nbsp;Element"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "DOM Element"
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "item"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The default subject to apply transformations to. If you use the pin property it will be applied to this element."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "trigger"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "A DOM node other than item to be used as a reference for position, height, and width calculations."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "applyTo"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "A DOM node other than item to apply transformations to."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "scroller"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The scrollable node in which the target is contained.<br/> The default is window."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "screen"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "A node that contains the scrollable element.<br/> The default is window."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "breakpoint",
                            "label": "breakpoint"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "breakpoint"
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "breakpoint"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Reference breakpoint, it will be possible to add custom values in Default utils"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "queryType"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "determines whether the scrollTriger should be active from breakpoint up or up to the breakpoint."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "propierties",
                            "label": "propierties"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "propierties"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "built-in propierties:"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "y",
                                "x",
                                "rotate",
                                "rotateY",
                                "rotateX",
                                "rotateZ",
                                "opacity",
                                "scale",
                                "scaleX",
                                "scaleY"
                            ]
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "custom scrollerTween/sequencer:"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "tween: use external scrollerTween/sequencer for complex animation"
                            ]
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "<strong>if no property is specified scrollTrigger can only be used to track onEnter/onEnterBack/onLeave/onLeaveBack events</strong>"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "range",
                            "label": "range"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "range"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Property that defines the calculation of the distance value.<br/>Valid only if you use simple built-in propierties<br/>Must be a string"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "1) x | y"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "<span class='quote'>+/-100px</span>: move by +-100 pixel",
                                "<span class='quote'>+/-100vw | +/-100vh</span>: move by +-100 fractions of viewport",
                                "<span class='quote'>+/-100w | +/-100h</span>: move by +-100 fractions of itself",
                                "The propierties will be re-calculated at each resize"
                            ]
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "2) rotate | rotateY | rotateX | rotateZ"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "<span class='quote'>45deg |  -45deg</span>, The default value is 0."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "3) scale | scaleX | scaleY"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "example: <span class='quote'>+/-0.5</span>, The scale property is increased by 0.5, th default value is 0."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "4) opacity"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "<span class='quote'>+/-</span> number between <span class='quote'>0 and 1</span>."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "5) customCssPropierites"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "<span class='quote'>'margin', 'padding-left', etc ...</span> Each value will be converted to px, no unit misure is needed."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "6) tween"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "If a <span class='quote'>tween</span> is used there are no options the value will be controlled by the <span class='quote'>sequencer/scrollerTween</span> itself."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-range.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 29
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "dynamicRange",
                            "label": "dynamicRange"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "dynamicRange"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Alternative to the range property.<br/>Valid only if you use simple built-in transformations"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "The transformation value calculated through the use of a function.",
                                "The result of the function will be used in px.",
                                "The function will be re-executed at each resize.",
                                "If used, it will take priority over the range method.",
                                "if the property is a tween it will have no effect."
                            ]
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-dynamic-range.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 18
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "tween",
                            "label": "scrollerTween/sequencer"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "use scrollerTween/sequencer"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "For more complex animations propierties use a custom tween. It is possible to use a <a href='./#mobMotion-sequencer'>sequencer</a>, otherwise there is a simplified tween: scrollerTween which shares some methods :"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "subscribe",
                                "subscribeCache",
                                "onStop",
                                "destroy"
                            ]
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Instead of the given property scrollerTween only needs two properties from and to"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-tween.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 33
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "position",
                            "label": "start/end"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "start/end"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Defines the start/end position of the animation, the value is a string made up of 3 optional values:"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "1) bottom | top | left | right"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Indicates the side of the viewport that will be referenced."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "If start corresponds to <span class='quote'>bottom/right</span> the animation will begin when the <span class='quote'>top/left</span> side of the item touches the indicated value from the bottom/right of the screen."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "If start corresponds to <span class='quote'>top/left</span> the animation will begin when the <span class='quote'>bottom/right</span> side of the item touches the indicated value from the top/left of the screen. ( reverse scroll use )"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The value indicated in start ( top/bottom/et.. ) will also influence the end value.<br/> If the start value takes the upper edge of the item as reference (i.e. start = 'bottom'), regardless of whether the end value is top or bottom the reference will always be the upper edge"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "2) +/-<value>vh | vw | px"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "add a value in <span class='quote'>vh|vw|px</span>, use vh in vertical direction, vw in horizontal direction,"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "3) +/- height | halfHeight | width | halfWidth"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "You can add the item <span class='quote'>height/width value or half</span> of one of them to the final value.<br/>Useful for centering the element."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "The values 2 & 3 will always be added from the chosen position towards the center of the screen, whether the position corresponds to top|bottom left|right"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-start.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 28
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "dynamicstart",
                            "label": "dynamicStart/dynamicEnd"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "dynamicStart/dynamicEnd"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "These properties can be used in place of start or end. This is an object that accepts two parameters:"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "1) position:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "<span class='quote'>top | right | bottom | left</span><br/>this parameter behaves exactly like the equivalent in start/end."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "2) value:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "A function that returns a number. Each function is recomputed after the resize event."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "Same as start/end this value will always be added from the chosen position towards the center of the screen, whether the position corresponds to top|bottom left|right"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-dynamic-start.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 57
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "fromto",
                            "label": "fromTo"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "fromTo"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "If this property is true the values will be applied starting from the final value leaving the start/end values unchanged."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "marker",
                            "label": "marker"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "marker"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Displays the start and end indicators of the animation.<br/> A marker will be applied to the edge of our element, and two fixed markers corresponding to the start and end values.<br/> The marker property accepts a string as a parameter, the assigned value will be displayed next to the marker"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-marker.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 20
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "direction",
                            "label": "direction"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "direction"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Indicates the direction of the scroller, it can be vertical or horizontal."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "ease",
                            "label": "ease"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "ease"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "If you decide to use the easing parameter, an instance of Lerp or Spring will be used to update the values."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "ease"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Boolean value indicating whether to use easing."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "easeType"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The type of easing used: spring | lerp."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "lerpConfig"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The velocity value of the lerp function. It must be a value between 0.01 and 0.1. The default value is 0.06"
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "springConfig"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The Spring configuration. can be a preset between default | gentle | wobbly | bounce | scroller.<br/>"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Spring has no effect with the sequencer module, it can instead be used with the scrollerTween modules.<br/>This is because the sequencer module uses a clamp on the maximum value thus preventing it from being exceeded."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-easing.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 36
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "pin",
                            "label": "pin"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "pin"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Allows you to freeze the element as if it were in sticky position. The position: sticky rule is always advisable, but there are situations in which a jsavascirpt solution can be convenient. The element will go to position: fixed with a certain advance before impacting the start position to prevent visual jumps. If the html structure allows it, the element will remain in its original node, otherwise it will come as a direct child of the body tag when attaching."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "pin"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Boolean value: default is false"
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "animatePin"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Boolean value, if true, an instance of Spring will be used at the moment of impact to make the release smoother. example"
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "forceTranspond"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Boolean value, if true, the element will always be moved as a child of the body tag."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "anticipatePinOnLoad"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The pin is always activated a little earlier based on the last scroll made. With this property, when loading the page and without having performed any scrolling, the element can be pinned even if slightly earlier than the preset position. The default value is false. "
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-pin.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 27
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "events",
                            "label": "events"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "events"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Events fired when animation starts/ends."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "onEnter"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": ["no params"]
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "onEnterBack"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": ["no params"]
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "onLeave"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": ["no params"]
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "onLeaveBack"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": ["no params"]
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "onTick"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "value: The scroll position of the parent. If no value is provided, the instance will calculate it autonomously.",
                                "parentIsMoving: Internal parameter use this parameter to connect two scrollTriggers as in the following point ( move() )."
                            ]
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-event.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 34
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "utils",
                            "label": "utils&nbsp;parameters"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "utils parameters"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "disableForce3D"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Boolean value.<br/>Disable the transform: translate3d(0,0,0) rule applied by the built-in property during animation to activate the GPU."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "useThrottle"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Boolean value.<br/>Apply a throttle to the scroll. The throttle value can be changed in <a href='./#mobMotion-defaults'>Default utils</a>."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "perspective"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Boolean value.<br/>Apply the css rule perspective: {value}px; transform-style: preserve-3d; to the parent HTMLElement."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "useWillChange"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Boolean value.<br/>When there is a large drop in fps, the will-change property is activated for a limited period of time. It is intended as a last resort to deal with a temporary problem. The default value is true."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-utils.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 27
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    }
                ]
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small",
                            "id": "init",
                            "label": "init"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "isSection": true,
                            "index": "ScrollTrigger / 02",
                            "useSticky": true
                        },
                        "content": "Methods"
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "init"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Initialize instance"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-init.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 13
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "move",
                            "label": "move"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "move ( connect multiple instances )"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "It is possible to connect multiple scrolltriggers or you can control a parallax from a scrollTrigger:"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "<span class='quote'>value</span>: current value. If used by another scrollTrigger/Parallax it will be used as the scroll value of its container without needing to be recalculated. ",
                                "<span class='quote'>parentIsMoving</span>: Internal parameter that helps synchronization, no direct utility for the user."
                            ]
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h6"
                        },
                        "content": "Classic horizontal scroller example: (purely demonstrative)"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-move.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 104
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "refresh",
                            "label": "refresh"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "refresh"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Recalculate all position/measurement values and update rendering. This operation is carried out automatically after each resize."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-refresh.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 1
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "big",
                            "id": "destroy",
                            "label": "destroy"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h5"
                        },
                        "content": "destroy"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Destroy instance"
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/scroll-trigger-destroy.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 2
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    }
                ]
            }
        }
    ]
}
