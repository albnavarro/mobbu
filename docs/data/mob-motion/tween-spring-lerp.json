{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "Tween animations"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium",
                "boxed": true,
                "note": true
            },
            "content": "<strong>Tweens</strong> can be thought of as stores that interpolate numeric values and trigger callbacks during animations."
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "dots": false,
                "links": true,
                "items": [
                    {
                        "label": "View implementation example",
                        "url": "./#caterpillarN1"
                    }
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "x-small",
                "label": "Tween type:",
                "isSection": true
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "x-small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "isSection": true,
                            "index": "Tween Spring Lerp / 01",
                            "useSticky": false
                        },
                        "content": "Animation type:"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "Time-based:"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "<strong>TimeTween</strong> (duration-based animation)"
                            ]
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "This type processes data over a specified duration and <strong>cannot</strong> be used interactively (e.g., with mouse events)."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "Based on a precision value:"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "<strong>Lerp</strong> (linear interpolation)",
                                "<strong>Spring</strong> (physics-based animation)"
                            ]
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Ideal for <strong>interactive</strong> animations like mouse trails or dynamic UI elements."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    }
                ]
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "x-small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "isSection": true,
                            "index": "Tween Spring Lerp / 02",
                            "useSticky": false
                        },
                        "content": "Common params:"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "data:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "An object containing the animation values to interpolate."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "relative:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "When <strong>true</strong>, values are calculated relative to the tween's current state."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "stagger:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "For stagger effects, refer to the <a href='./#mobMotion-stagger'><strong>stagger</strong></a> section."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    }
                ]
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small",
                            "id": "tween",
                            "label": "Tween"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "isSection": true,
                            "index": "Tween Spring Lerp / 03",
                            "useSticky": false
                        },
                        "content": "Time tween:"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "duration:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The animation duration in <strong>milliseconds</strong>."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "ease:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The easing function that defines the animation's <strong>acceleration curve</strong>."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/tween-type.d.ts",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 55
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/tween.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 9
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    }
                ]
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small",
                            "id": "Spring",
                            "label": "Spring"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "isSection": true,
                            "index": "Tween Spring Lerp / 04",
                            "useSticky": false
                        },
                        "content": "Spring"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "config:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Preset configuration."
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "default",
                                "gentle",
                                "wobbly",
                                "bounce",
                                "scroller"
                            ]
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "configProps"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "<strong>Override</strong> individual values of the selected preset configuration."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/spring-type.d.ts",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 30
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/spring.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 11
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    }
                ]
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small",
                            "id": "lerp",
                            "label": "Lerp"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "isSection": true,
                            "index": "Tween Spring Lerp / 05",
                            "useSticky": false
                        },
                        "content": "Lerp"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "velocity:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Controls the interpolation speed (range: <strong>0.01–0.1</strong>; default: <strong>0.06</strong>)."
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "precision:"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Threshold for considering the animation complete (default: <strong>0.01</strong>)."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/lerp-type.d.ts",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 24
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/lerp.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 9
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    }
                ]
            }
        },
        {
            "component": "html-content",
            "props": {
                "useTriangle": false,
                "usePadding": false,
                "data": [
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "x-small",
                            "label": "Methods",
                            "isSection": true
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small",
                            "id": "set",
                            "label": "Set"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h2",
                            "isSection": true,
                            "index": "Tween Spring Lerp / 06",
                            "useSticky": false
                        },
                        "content": "Common methods"
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "small"
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "When calling methods (<strong>set</strong>, <strong>goTo</strong>, <strong>goFrom</strong>, <strong>goFromTo</strong>) during an active tween, they return <strong>Promise.reject()</strong> to ensure only the initial Promise resolves. Use <strong>catch(() => {})</strong> to suppress <strong>Firefox's</strong> console errors about unhandled rejections."
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "Set"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The <strong>set()</strong> method immediately applies values and returns a Promise."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/set.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 8
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "goto",
                            "label": "GoTo"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "goTo"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The <strong>goTo()</strong> method transitions from the current state to the target state specified in the first parameter. The <strong>second parameter</strong> allows temporary <strong>override</strong> of default tween properties (except stagger). Values can be numeric or dynamically calculated via a function (re-evaluated on each <strong>play()</strong>)."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/go-to.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 14
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "gofrom",
                            "label": "GoFrom"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "goFrom"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The <strong>goFrom()</strong> method transitions from a specified initial state (first parameter) to the current state. The <strong>second parameter</strong> allows temporary <strong>override</strong> of default tween properties (except stagger). Values can be numeric or dynamically calculated via a function (re-evaluated on each <strong>play()</strong>)."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/go-from.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 14
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "gofromto",
                            "label": "GoFromTo"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "goFromTo"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The <strong>goFromTo()</strong> method transitions between two specified states (<strong>parameters 1 and 2</strong>). Both states must share the same keys. The <strong>third parameter</strong> allows temporary <strong>override</strong> of default tween properties (except stagger). Values can be numeric or dynamically calculated via a function (re-evaluated on each <strong>play()</strong>)."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/go-from-to.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 9
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "stop",
                            "label": "Stop"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "stop"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The <strong>stop()</strong> method accepts a parameter to clear the stagger cache (if <strong>subscribeCache</strong> was used). If disabled, staggers will complete their animation by syncing with the first element."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/stop.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 1
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "pause",
                            "label": "Pause/Resume"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "pause/resume"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Pauses or resumes a tween/spring/lerp animation."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/pause.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 9
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "subscribe",
                            "label": "Subscribe"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "Subscribe"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The <strong>subscribe()</strong> method applies real-time values to a target and returns an <strong>unsubscribe()</strong> function."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "Use <strong>weakRef</strong> for animations in <strong>nested functions</strong> or <strong>closures</strong> to prevent memory leaks."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "This method is not very suitable for staggers. If you're using staggers, the <strong>subscribeCache</strong> method is preferable.<br/> The stagger mechanism works by <strong>delegating callbacks</strong> to specific frames. This method is unable to clean up future renderings if the animation is stopped, which is something <strong>subscribeCache can do</strong> instead."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/subscribe.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 21
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "subscribeCache",
                            "label": "SubscribeCache"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "SubscribeCache"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Optimized version of <strong>subscribe</strong> for staggers"
                    },
                    {
                        "component": "mob-list",
                        "props": {
                            "style": "medium",
                            "items": [
                                "Stores targets/callbacks <strong>once</strong>",
                                "It only accumulates an object with the <strong>actual updated values</strong>."
                            ]
                        }
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "Use <strong>weakRef</strong> for animations in <strong>nested functions</strong> or <strong>closures</strong> to prevent memory leaks."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/subscribe-cache.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 8
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "onComplete",
                            "label": "OnComplete"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "onComplete"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "The <strong>onComplete()</strong> method triggers when the animation finishes, useful for cleanup (e.g., disabling GPU usage)."
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium",
                            "boxed": true,
                            "note": true
                        },
                        "content": "This method may not be the most suitable when working with <strong>staggers</strong>. On the other hand, using <strong>subscribeCache</strong> (a dedicated method for staggers) allows you to cancel future renderings if they should not be executed. This method, however, <strong>cannot be removed from the rendering queue</strong>."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/on-complete.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 12
                        }
                    },
                    {
                        "component": "mob-spacer",
                        "props": {
                            "style": "medium",
                            "id": "destroy",
                            "label": "Destroy"
                        }
                    },
                    {
                        "component": "mob-title",
                        "props": {
                            "tag": "h3"
                        },
                        "content": "Destroy"
                    },
                    {
                        "component": "mob-paragraph",
                        "props": {
                            "style": "medium"
                        },
                        "content": "Destroys the tween instance."
                    },
                    {
                        "component": "mob-snippet",
                        "props": {
                            "source": "./snippets/mob-motion/destroy.js",
                            "isFull": true,
                            "hasOverflow": false,
                            "hasBorder": true,
                            "numLines": 2
                        }
                    }
                ]
            }
        }
    ]
}
