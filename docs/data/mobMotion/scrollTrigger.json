{
    "data": [
        {
            "component": "mob-spacer",
            "props": {
                "style": "small",
                "id": "start",
                "label": "Overview"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h1",
                "isBold": true
            },
            "content": "scrollTrigger"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "To be activated, the <span>init</span> method must be executed."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Unlike <span>parallax which reasons by speed/multipliers</span>, scrollTrigger allows you to reason in <span>absolute values</span> from point A ( <span>start</span> ) to point B ( <span>end</span> )."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerInit.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 13
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3",
                "color": "green"
            },
            "content": "Params:"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerType.d.ts",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 69
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "target",
                "label": "DOM&nbsp;Element"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "DOM Element"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "item"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The default subject to apply transformations to. If you use the <span>pin</span> property it will be applied to this element."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "trigger"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "A DOM node other than <span>item</span> to be used as a reference for <span>position, height, and width</span> calculations."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "applyTo"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "A DOM node other than <span>item</span> to apply transformations to."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "scroller"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The <span>scrollable node</span> in which the target is contained.<br/> The default is <span>window</span>."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "screen"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "A node that contains the <span>scrollable element</span>.<br/> The default is <span>window</span>."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "breakpoint",
                "label": "breakpoint"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "breakpoint"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "breakpoint"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>Reference breakpoint</span>, it will be possible to add custom values in <a href='./#mobMotion_defaults'>Default utils</a>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5"
            },
            "content": "queryType"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "determines whether the scrollTriger should be active from <span>breakpoint up</span> or <span>up to the breakpoint</span>."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "propierties",
                "label": "propierties"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "propierties"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>built-in propierties:</span>"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span>y</span>",
                    "<span>x</span>",
                    "<span>rotate</span>",
                    "<span>rotateY</span>",
                    "<span>rotateX</span>",
                    "<span>rotateZ</span>",
                    "<span>opacity</span>",
                    "<span>scale</span>",
                    "<span>scaleX</span>",
                    "<span>scaleY</span>"
                ]
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>custom scrollerTween/sequencer:</span>"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span>tween</span>: use external <span>scrollerTween/sequencer</span> for complex animation"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "range",
                "label": "range"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "range"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Property that defines the calculation of the distance value.<br/><span>Valid only if you use simple built-in propierties</span><br/>Must be a <span>string</span>"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "1) x | y"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span>+/-100px:</span> move by +-100 pixel",
                    "<span>+/-100vw | +/-100vh:</span> move by +-100 fractions of viewport",
                    "<span>+/-100w | +/-100h:</span> move by +-100 fractions of itself",
                    "The propierties will be <span>re-calculated at each resize</span>"
                ]
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "2) rotate | rotateY | rotateX | rotateZ"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>45deg</span> |  <span>-45deg</span>, The default value is 0."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "3) scale | scaleX | scaleY"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "example: <span>+/-0.5</span>, The scale property is increased by 0.5, th default value is 0."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "4) opacity"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>+/-</span> number between 0 and 1."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "5) customCssPropierites"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "('margin', 'padding-left', etc ...) Each value will be converted to px, no unit misure is needed."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "6) tween"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>If a tween is used</span> there are no options the value will be controlled by the <span>sequencer/scrollerTween</span> itself."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerRange.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 29
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "dynamicRange",
                "label": "dynamicRange"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "dynamicRange"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Alternative to the range property.<br/><span>Valid only if you use simple built-in transformations</span>"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "The transformation value calculated through the <span>use of a function</span>.",
                    "The result of the function <span>will be used in px</span>.",
                    "The function will be <span>re-executed at each resize</span>.",
                    "If used, it will take <span>priority over the range method</span>.",
                    "<span>if the property is a tween it will have no effect.</span>"
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerDynamicRange.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 18
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "tween",
                "label": "scrollerTween/sequencer"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "use scrollerTween/sequencer"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "For more <span>complex animations</span> propierties use a <span>custom tween</span>. It is possible to use a <a href='./#mobMotion_sequencer'>sequencer</a>, otherwise there is a simplified tween: <span>scrollerTween</span> which shares some methods :"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": ["subscribe", "subscribeCache", "onStop", "destroy"]
            }
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Instead of the given property scrollerTween only needs two properties <span>from</span> and <span>to</span>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerTween.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 33
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "position",
                "label": "start/end"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "start/end"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Defines the <span>start/end position of the animation</span>, the value is a string made up of 3 optional values:"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "1) bottom | top | left | right"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Indicates the <span>side of the viewport</span> that will be referenced."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "If <span>start</span> corresponds to <span>bottom/right</span> the animation will begin when the <span>top/left side of the item touches the indicated value</span> from the bottom/right of the screen."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "If <span>start</span> corresponds to <span>top/left</span> the animation will begin when the <span>bottom/right side of the item touches the indicated value</span> from the top/left of the screen. ( reverse scroll use )"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The value indicated in start ( top/bottom/et.. ) <span>will also influence the end value</span>.<br/> If the start value takes the upper edge of the item as reference (i.e. start = 'bottom'), <span>regardless of whether the end value is top or bottom the reference will always be the upper edge</span>"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "2) +/-<value>vh | vw | px"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "add a value in <span>vh|vw|px</span>, use <span>vh in vertical direction</span>, <span>vw in horizontal direction</span>,"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "3) +/- height | halfHeight | width | halfWidth"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "You can add the <span>item height/width value or half of one of them</span> to the final value.<br/>Useful for centering the element."
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The values 2 & 3 will always be <span>added from the chosen position towards</span> the center of the screen, whether the position corresponds to top|bottom left|right"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerStart.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 28
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "dynamicstart",
                "label": "dynamicStart/dynamicEnd"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "dynamicStart/dynamicEnd"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "These properties can be used <span>in place of start or end</span>. This is an object that accepts two parameters:"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "1) position:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>top | right | bottom | left</span><br/>this parameter behaves exactly like the equivalent in start/end."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6",
                "color": "green"
            },
            "content": "2) value:"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>A function that returns a number</span><br/>Same as range this value will always be <span>added from the chosen position towards</span> the center of the screen, whether the position corresponds to top|bottom left|right"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>Each function is recomputed after the resize event.</span>"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerDynamicStart.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 57
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "fromto",
                "label": "fromTo"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "fromTo"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "If this property is true the values <span>will be applied starting from the final value leaving the start/end values unchanged</span>."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "marker",
                "label": "marker"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "marker"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Displays the start and end indicators of the animation.<br/> A marker will be applied to <span>the edge of our element</span>, and <span>two fixed markers</span> corresponding to the <span>start and end</span> values.<br/> The marker property accepts a <span>string as a parameter</span>, the assigned value will be displayed next to the marker"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerMarker.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 20
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "direction",
                "label": "direction"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "direction"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Indicates the <span>direction of the scroller</span>, it can be <span>vertical</span> or <span>horizontal</span>."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "ease",
                "label": "ease"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "ease"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "If you decide to use the easing parameter, an <span>instance</span> of <a href='./#mobMotion_tween_spring_lerp'>Lerp or Spring</a> will be used to update the values."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "ease"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Boolean value indicating whether to use easing."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "easeType"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The type of easing used: <span>spring</span> | <span>lerp</span>."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "lerpConfig"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The <span>velocity</span> value of the lerp function. It must be a value <span>between 0.01 and 0.1</span>. The default value is 0.06"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "springConfig"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The Spring configuration. can be a preset between <span>default</span> | <span>gentle</span> | <span>wobbly</span> | <span>bounce</span> | <span>scroller</span>.<br/>"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>Spring has no effect with the sequencer module</span>, it can instead be used with the <span>scrollerTween modules</span>.<br/>This is because the <span>sequencer module uses a clamp on the maximum</span> value thus preventing it from being exceeded."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerEasing.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 36
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "pin",
                "label": "pin"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "pin"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Allows you to <span>freeze the element</span> as if it were in <span>sticky position</span>. The <span>position: sticky rule is always advisable</span>, but there are situations in which a jsavascirpt solution can be convenient. The element will go to <span>position: fixed</span> with a certain advance before impacting the start position to prevent visual jumps. <span>If the html structure allows it, the element will remain in its original node, otherwise it will come as a direct child of the body tag</span> when attaching."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "pin"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Boolean value: default is false"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "animatePin"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Boolean value, if true, an instance of <span>Spring will be used at the moment of impact</span> to make the release smoother. <a href='./#horizontalScrollerV2'>example</a>"
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "forceTranspond"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Boolean value, if true, the element <span>will always be moved as a child of the body tag</span>."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "anticipatePinOnLoad"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "The pin is always activated a little earlier based on the last scroll made. With this property, <span>when loading the page and without having performed any scrolling, the element can be pinned even if slightly earlier than the preset position</span>. The default value is false. "
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerPin.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 27
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "events",
                "label": "events"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "events"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "Events fired when animation starts/ends."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "onEnter"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": ["no params"]
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "onEnterBack"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": ["no params"]
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "onLeave"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": ["no params"]
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "onLeaveBack"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": ["no params"]
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "onTick"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span>value</span>: The scroll position of the parent. If no value is provided, the instance will calculate it autonomously.",
                    "<span>parentIsMoving</span>: Internal parameter use this parameter to connect two scrollTriggers as in the following point ( move() )."
                ]
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerEvent.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 34
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "move",
                "label": "move"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "move ( connect multiple instances )"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "It is <span>possible to connect multiple scrolltriggers</span> or you can control a parallax from a scrollTrigger:"
        },
        {
            "component": "mob-list",
            "props": {
                "style": "medium",
                "items": [
                    "<span>value</span>: current value. If used by another scrollTrigger/Parallax it will be used as the scroll value of its container without needing to be recalculated. ",
                    "<span>parentIsMoving</span>: Internal parameter that helps synchronization, <span>no direct utility for the user</span>."
                ]
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h6"
            },
            "content": "Classic horizontal scroller example: (purely demonstrative)"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerMove.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 104
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "utils",
                "label": "utils&nbsp;parameters"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "utils parameters"
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "disableForce3D"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>Boolean value</span>.<br/>Disable the transform: <span>translate3d(0,0,0) rule</span> applied by the <span>built-in property during animation</span> to activate the GPU."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "useThrottle"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>Boolean value</span>.<br/>Apply a throttle to the scroll. The throttle value can be changed in <a href='./#mobMotion_defaults'>Default utils</a>."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "perspective"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>Boolean value</span>.<br/>Apply the css rule <span>perspective: {value}px; transform-style: preserve-3d;</span> to the parent HTMLElement."
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h5",
                "color": "green"
            },
            "content": "useWillChange"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>Boolean value</span>.<br/>When there is a <span>large drop in fps</span>, the will-change property is activated for a <span>limited period of time</span>. It is intended as a <span>last resort</span> to deal with a temporary problem. The default value is true."
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerUtils.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 27
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "refresh",
                "label": "refresh"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "refresh"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>Recalculate all position/measurement</span> values and <span>update rendering</span>. This operation is carried out automatically after each resize."
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "small"
            }
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerRefresh.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 1
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium",
                "id": "destroy",
                "label": "destroy"
            }
        },
        {
            "component": "mob-title",
            "props": {
                "tag": "h3"
            },
            "content": "destroy"
        },
        {
            "component": "mob-paragraph",
            "props": {
                "style": "medium"
            },
            "content": "<span>Destroy instance</span>"
        },
        {
            "component": "mob-snippet",
            "props": {
                "source": "./snippets/mobMotion/scrollTriggerDestroy.js",
                "isFull": true,
                "hasOverflow": false,
                "hasBorder": true,
                "numLines": 2
            }
        },
        {
            "component": "mob-spacer",
            "props": {
                "style": "medium"
            }
        }
    ]
}
