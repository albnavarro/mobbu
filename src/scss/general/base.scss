@use '../vars' as *;
@use '../abstract' as *;
@use '../../../node_modules/sass-mq/mq';

// -----------------------------------------------------------------------------
// This file contains very basic styles.
// -----------------------------------------------------------------------------
@use 'sass:map';

/**
 * Set up a decent box model on the root element
 */

:root {
    --header-height: #{rem(80)};
    --header-navinfo: #{rem(40)};
    --footer-height: #{rem(80)};
    --nav-width: 100vw;
    --default-padding: #{rem(100)};

    @include mq.mq(tablet) {
        --nav-width: #{rem(340)};
    }
}

html {
    box-sizing: border-box;
}

body {
    background-color: $dark-green;
    overflow-x: hidden;
}

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*,
*::before,
*::after {
    box-sizing: inherit;
}

/**
 * Basic styles for links
 */

img {
    max-width: 100%;
    height: auto;
}

main {
    padding-top: calc(var(--header-height));
    transition: transform 0.55s, opacity 1s 0.5s;
    min-height: 100vh;

    &.shift {
        transition: transform 0.55s, opacity 0.55s;
        cursor: pointer;
        opacity: 0;
    }
}

.container {
    margin: auto;

    @include mq.mq('desktop') {
        padding-left: rem(40);

        &--padding {
            padding: rem(20) rem(40);
        }
    }
}

.inner-main {
    padding-top: rem(150);
}

.l-padding {
    padding: var(--default-padding);
}
